{"version":3,"sources":["redux/dialogsReducer.ts","utils/helpers/object-helpers.ts","api/usersAPI.ts","api/followAPI.ts","redux/usersReducer.ts","components/Sidebar/Sidebar.module.css","assets/images/profile.jpg","assets/images/dialogs.jpg","assets/images/users.jpg","assets/images/news.jpg","assets/images/music.jpg","assets/images/friends.jpg","components/Sidebar/Banner/Banner.module.css","components/Footer/SocialLinks/SocialLinks.module.css","components/Sidebar/Nav/Nav.module.css","assets/images/loader.svg","components/Login/LoginForm/LoginForm.module.css","components/common/FormControls/FormControls.tsx","components/common/FormControls/FormControls.module.css","serviceWorker.ts","components/Sidebar/Banner/Banner.tsx","components/Sidebar/Nav/Nav.tsx","components/Header/Header.tsx","api/securityAPI.ts","api/authAPI.ts","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Sidebar/Sidebar.tsx","components/Footer/SocialLinks/SocialLink/SocialLink.tsx","components/Footer/SocialLinks/SocialLinks.tsx","components/Footer/Footer.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Friends/Friends.tsx","components/Login/LoginForm/LoginForm.tsx","components/Login/Login.tsx","redux/appReducer.ts","components/App/App.tsx","redux/redux-store.ts","index.tsx","components/App/App.module.css","components/Header/Header.module.css","components/common/Preloader/Preloader.tsx","utils/validators/validators.ts","api/api.ts","components/Footer/Footer.module.css","components/Footer/SocialLinks/SocialLink/SocialLink.module.css","components/Login/Login.module.css","components/common/Preloader/Preloader.module.css","api/profileAPI.ts","redux/profileReducer.ts"],"names":["initialState","dialogs","id","v1","name","messages","message","actions","addMessage","newMessageBody","type","dialogsReducer","state","action","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","usersAPI","currentPage","pageSize","instance","get","then","response","data","followAPI","unfollowUser","userId","delete","followUser","post","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","setUsers","setCurrentPage","setTotalCount","totalCount","toggleIsFetching","toggleFollowingInProgress","requestUsersTC","page","dispatch","a","console","log","_followUnfollowFlow","apiMethod","actionCreator","resultCode","ResultCodeStatus","success","followUsersTC","bind","unfollowUsersTC","usersReducer","followed","filter","module","exports","Textarea","input","meta","touched","error","restProps","hasError","className","styles","formControl","textarea","errorMsg","Input","text","inputText","createField","placeholder","validators","component","props","validate","Boolean","window","location","hostname","match","Banner","banner","src","image","alt","title","Nav","nav","to","link","activeClassName","activeLink","Header","header","loginBlock","isAuth","login","onClick","logout","loginLink","securityAPI","authAPI","email","password","rememberMe","captcha","captchaUrl","payload","getAuthUserData","getCaptchaUrl","url","authReducer","HeaderContainer","this","React","Component","connect","auth","Sidebar","sidebar","path","render","profileImg","dialogsImg","usersImg","newsImg","musicImg","friendsImg","SocialLink","socialLink","href","target","rel","SocialLinks","socialLinks","Footer","footer","copyright","News","news","Music","music","Friends","friends","reduxForm","form","handleSubmit","onSubmit","settings","requiredField","formRow","htmlFor","inputCheckbox","button","MapDispatchToProps","captchaIsRequired","length","stopSubmit","_error","section","formData","initialized","appReducer","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","catchAllUnhandledErrors","promiseRejectionEvent","initializeApp","addEventListener","removeEventListener","app","main","content","contentMain","exact","from","fallback","Preloader","compose","withRouter","promise","Promise","all","rootReducer","combineReducers","profilePage","profileReducer","messagesPage","usersPage","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","wrapper","preloader","img","value","maxLengthCreator","maxLength","axios","create","baseURL","withCredentials","headers","profileAPI","status","put","file","FormData","append","profile","posts","likesCounter","addPost","newPostBody","setUserProfile","setStatus","setPhoto","photos","getUserProfile","getUserStatus","updateStatus","savePhoto","saveProfile","getState","reject","newPost"],"mappings":"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","file":"static/js/main.c645680b.chunk.js","sourcesContent":["import {v1} from 'uuid';\nimport {InferActionsTypes} from './redux-store';\n\n\nconst initialState = {\n    dialogs: [\n        {id: v1(), name: 'Jack'},\n        {id: v1(), name: 'Nick'},\n        {id: v1(), name: 'Alex'},\n    ],\n    messages: [\n        {id: v1(), message: 'Hi! How are you?'},\n        {id: v1(), message: 'I am fine! And you?'},\n        {id: v1(), message: 'Me too. Have a nice day!'},\n        {id: v1(), message: ':)'},\n    ]\n}\n\nconst dialogsReducer = (state = initialState, action: DialogsActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'dialogs/ADD_MESSAGE':\n            return {\n                ...state,\n                messages: [...state.messages, {id: v1(), message: action.newMessageBody}]\n            }\n        default:\n            return state\n    }\n}\n\n//Action\nexport const actions = {\n    addMessage: (newMessageBody: string) =>\n        ({type: 'dialogs/ADD_MESSAGE', newMessageBody} as const)\n}\n\n\nexport default dialogsReducer;\n\n\n//Types\ntype InitialStateType = typeof initialState;\ntype DialogsActionsType = InferActionsTypes<typeof actions>;","import {UserType} from '../../types/types';\r\n\r\nexport const updateObjectInArray = (items: Array<UserType>, itemId: string, objPropName: keyof UserType, newObjProps: Object) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {instance} from './api';\r\nimport {UserType} from '../types/types';\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\r\n        return instance.get<GetUsersResponseType>(`/users?page=${currentPage}&count=${pageSize}&sortOrder=asc`)\r\n            .then(response => response.data)\r\n    }\r\n\r\n}\r\n\r\nexport type GetUsersResponseType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string\r\n}\r\n\r\n","import {APIResponseType, instance} from './api';\r\n\r\nexport const followAPI = {\r\n    unfollowUser(userId: string) {\r\n        return instance.delete<APIResponseType>(`/follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    followUser(userId: string) {\r\n        return instance.post<APIResponseType>(`/follow/${userId}`)\r\n            .then(response => response.data)\r\n    }\r\n\r\n}","import {UserType} from '../types/types';\nimport {BaseThunkType, InferActionsTypes} from './redux-store';\nimport {Dispatch} from 'react';\nimport {updateObjectInArray} from '../utils/helpers/object-helpers';\nimport {usersAPI} from '../api/usersAPI';\nimport {followAPI} from '../api/followAPI';\nimport {APIResponseType, ResultCodeStatus} from '../api/api';\n\n\nconst initialState = {\n    users: [] as Array<UserType>,\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [] as Array<number>\n}\n\nconst usersReducer = (state = initialState, action: UsersActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'users/FOLLOW':\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n            }\n        case 'users/UNFOLLOW':\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n            }\n        case 'users/SET_USERS':\n            return {...state, users: action.users}\n        case 'users/SET_CURRENT_PAGE':\n            return {...state, currentPage: action.currentPage}\n        case 'users/SET_TOTAL_COUNT':\n            return {...state, totalUsersCount: action.totalCount}\n        case 'users/TOGGLE_IS_FETCHING':\n            return {...state, isFetching: action.isFetching}\n        case 'users/TOGGLE_FOLLOWING_PROGRESS':\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        default:\n            return state\n    }\n}\n\n\n//Actions\nexport const actions = {\n    followSuccess: (userId: string) =>\n        ({type: 'users/FOLLOW', userId} as const),\n    unFollowSuccess: (userId: string) =>\n        ({type: 'users/UNFOLLOW', userId} as const),\n    setUsers: (users: Array<UserType>) =>\n        ({type: 'users/SET_USERS', users} as const),\n    setCurrentPage: (currentPage: number) =>\n        ({type: 'users/SET_CURRENT_PAGE', currentPage} as const),\n    setTotalCount: (totalCount: number) =>\n        ({type: 'users/SET_TOTAL_COUNT', totalCount} as const),\n    toggleIsFetching: (isFetching: boolean) =>\n        ({type: 'users/TOGGLE_IS_FETCHING', isFetching} as const),\n    toggleFollowingInProgress: (isFetching: boolean, userId: number) =>\n        ({type: 'users/TOGGLE_FOLLOWING_PROGRESS', isFetching, userId} as const),\n}\n\n//Thunks\nexport const requestUsersTC = (page: number, pageSize: number): ThunkType => async dispatch => {\n    try {\n        // show preloader\n        dispatch(actions.toggleIsFetching(true))\n        dispatch(actions.setCurrentPage(page))\n        const response = await usersAPI.getUsers(page, pageSize)\n        // hide preloader\n        dispatch(actions.toggleIsFetching(false))\n        dispatch(actions.setUsers(response.items))\n        dispatch(actions.setTotalCount(response.totalCount))\n    } catch (error) {\n        console.log(error)\n    }\n}\nconst _followUnfollowFlow = async (dispatch: Dispatch<UsersActionsType>, userId: string, apiMethod: (userId: string) => Promise<APIResponseType>, actionCreator: (userID: string) => UsersActionsType) => {\n    try {\n        // disable btn during server response\n        dispatch(actions.toggleFollowingInProgress(true, +userId))\n        const response = await apiMethod(userId)\n        if (response.resultCode === ResultCodeStatus.success) {\n            dispatch(actionCreator(userId))\n        }\n        // activate btn after server response\n        dispatch(actions.toggleFollowingInProgress(false, +userId))\n    } catch (error) {\n        console.log(error)\n    }\n\n}\nexport const followUsersTC = (userId: string): ThunkType => async dispatch => {\n    await _followUnfollowFlow(dispatch, userId, followAPI.followUser.bind(followAPI), actions.followSuccess)\n}\nexport const unfollowUsersTC = (userId: string): ThunkType => async dispatch => {\n    await _followUnfollowFlow(dispatch, userId, followAPI.unfollowUser.bind(followAPI), actions.unFollowSuccess)\n}\n\nexport default usersReducer;\n\n\n//Types\ntype InitialStateType = typeof initialState;\ntype UsersActionsType = InferActionsTypes<typeof actions>;\ntype ThunkType = BaseThunkType<UsersActionsType>;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__1oiXV\"};","module.exports = __webpack_public_path__ + \"static/media/profile.6be79ee3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dialogs.6fe6dff8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/users.9a90444d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/news.de3167ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/music.3e4441df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/friends.50d16565.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Banner_banner__1ox2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialLinks\":\"SocialLinks_socialLinks__38whE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3C39h\",\"link\":\"Nav_link__2qWFD\",\"activeLink\":\"Nav_activeLink__394vJ\"};","module.exports = __webpack_public_path__ + \"static/media/loader.5613c226.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"LoginForm_settings__1Q2NN\",\"formRow\":\"LoginForm_formRow__run0D\",\"button\":\"LoginForm_button__3uNqO\",\"errorMsg\":\"LoginForm_errorMsg__1OYMz\"};","import React from 'react';\nimport styles from './FormControls.module.css';\nimport {Field, WrappedFieldProps} from 'redux-form';\nimport {RequiredFieldType} from '../../../utils/validators/validators';\n\ntype OwnPropsType = {\n    text: string\n}\n\nexport const Textarea: React.FC<WrappedFieldProps> = ({\n                                                          input,\n                                                          meta: {touched, error},\n                                                          ...restProps\n                                                      }) => {\n    const hasError = touched && error\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <textarea {...input} className={styles.textarea} {...restProps}/>\n            <span className={styles.errorMsg}>{hasError && error}</span>\n        </div>\n    )\n}\n\nexport const Input: React.FC<WrappedFieldProps & OwnPropsType> = ({\n                                                                      input,\n                                                                      meta: {\n                                                                          touched,\n                                                                          error\n                                                                      },\n                                                                      text,\n                                                                      ...restProps\n                                                                  }) => {\n    const hasError = touched && error\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <input {...input} className={styles.inputText} {...restProps}/>\n            <span className={styles.errorMsg}>{hasError && error}</span>\n        </div>\n    )\n}\n\n\nexport function createField<FormKeysType extends string>(placeholder: string, name: FormKeysType, validators: RequiredFieldType[], component: React.FC<WrappedFieldProps & OwnPropsType>, props = {}, text?: string, type?: string) {\n    return <>\n        <Field\n            name={name}\n            validate={validators}\n            component={component}\n            type={type}\n            {...props}\n        />{text}\n    </>;\n}\n\nexport type GetStringKeys<T> = Extract<keyof T, string>\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"FormControls_textarea__2XnMZ\",\"inputText\":\"FormControls_inputText__Jsp5o\",\"formControl\":\"FormControls_formControl__1_tJx\",\"error\":\"FormControls_error__jcdfe\",\"errorMsg\":\"FormControls_errorMsg__1A9DO\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport styles from './Banner.module.css';\n\ntype BannerType = {\n    title?: string\n    image: string\n}\n\nconst Banner = (props: BannerType) => {\n    return (\n        <div className={styles.banner}>\n            <img src={props.image} alt={props.title}/>\n        </div>\n    )\n}\n\nexport default Banner;","import React from 'react';\nimport styles from './Nav.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst Nav = () => {\n    return (\n        <nav className={styles.nav}>\n            <NavLink to=\"/profile\" className={styles.link}\n                     activeClassName={styles.activeLink}>Profile</NavLink>\n            <NavLink to=\"/dialogs\" className={styles.link}\n                     activeClassName={styles.activeLink}>Dialogs</NavLink>\n            <NavLink to=\"/users\" className={styles.link}\n                     activeClassName={styles.activeLink}>Users</NavLink>\n            <NavLink to=\"/news\" className={styles.link}\n                     activeClassName={styles.activeLink}>News</NavLink>\n            <NavLink to=\"/music\" className={styles.link}\n                     activeClassName={styles.activeLink}>Music</NavLink>\n            <NavLink to=\"/friends\" className={styles.link}\n                     activeClassName={styles.activeLink}>Friends</NavLink>\n        </nav>\n    )\n}\n\nexport default Nav;","import React from 'react';\nimport styles from './Header.module.css';\nimport {NavLink} from 'react-router-dom';\n\nexport type HeaderPropsType = {\n    isAuth: boolean\n    login: any\n    logout: any\n}\n\nconst Header = (props: HeaderPropsType) => {\n\n    return (\n        <header className={styles.header}>\n            <h3 className={styles.title}>Social Network <span>by Andrey Yantsevich</span>\n            </h3>\n\n            <div className={styles.loginBlock}>\n\n                {props.isAuth\n                    ? <div>Hello, {props.login}! <br/><span onClick={props.logout}\n                                                            className={styles.logout}>Logout</span>\n                    </div>\n                    : <NavLink className={styles.loginLink} to={'/login'}>Login</NavLink>}\n\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import {instance} from './api';\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<{ url: string }>('/security/get-captcha-url')\r\n            .then(response => response.data)\r\n    }\r\n\r\n}","import {APIResponseType, instance} from './api';\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<APIResponseType<{ id: string, email: string, login: string }>>(`/auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: string | null = null) {\r\n        return instance.post<APIResponseType<{ userId: string }>>(`/auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n            .then(response => response.data)\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete<APIResponseType>(`/auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n}","import {FormAction, stopSubmit} from 'redux-form';\nimport {BaseThunkType, InferActionsTypes} from './redux-store';\nimport {securityAPI} from '../api/securityAPI';\nimport {authAPI} from '../api/authAPI';\nimport {ResultCodeStatus} from '../api/api';\n\nconst initialState = {\n    userId: null as string | null,\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false,\n    captchaUrl: null as string | null\n}\n\nconst authReducer = (state = initialState, action: AuthActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'auth/SET_USER_DATA':\n            return {...state, ...action.data}\n        case 'auth/GET_CAPTCHA_URL_SUCCESS':\n            return {...state, ...action.payload}\n        default:\n            return state\n    }\n}\n\n\n//Actions\nexport const actions = {\n    setAuthUserData: (userId: null | string, email: null | string, login: null | string, isAuth: boolean) =>\n        ({type: 'auth/SET_USER_DATA', data: {userId, email, login, isAuth}} as const),\n    getCaptchaUrlSuccess: (captchaUrl: string) =>\n        ({type: 'auth/GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}} as const),\n}\n\n// Thunks\nexport const getAuthUserData = (): ThunkType => async dispatch => {\n    try {\n        const response = await authAPI.me()\n        if (response.resultCode === ResultCodeStatus.success) {\n            const {id, login, email} = response.data\n            dispatch(actions.setAuthUserData(id, email, login, true))\n        }\n    } catch (error) {\n        console.log(error)\n    }\n\n}\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async dispatch => {\n    const response = await authAPI.login(email, password, rememberMe, captcha)\n    if (response.resultCode === ResultCodeStatus.success) {\n        dispatch(getAuthUserData())\n    } else {\n        if (response.resultCode === ResultCodeStatus.captchaIsRequired) {\n            dispatch(getCaptchaUrl())\n        }\n        // get error message from server\n        const message = response.messages.length > 0 ? response.messages[0] : 'Some Error'\n        // stop form submit if fields are wrong\n        dispatch(stopSubmit('login', {_error: message}))\n    }\n}\nexport const getCaptchaUrl = (): ThunkType => async dispatch => {\n    try {\n        const response = await securityAPI.getCaptchaUrl()\n        const captchaUrl = response.url\n        dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\n    } catch (error) {\n        console.log(error)\n    }\n\n}\nexport const logout = (): ThunkType => async dispatch => {\n    try {\n        const response = await authAPI.logout()\n        if (response.resultCode === ResultCodeStatus.success) {\n            dispatch(actions.setAuthUserData(null, null, null, false))\n        }\n    } catch (error) {\n        console.log(error)\n    }\n\n}\n\nexport default authReducer;\n\n\n// Types\ntype InitialStateType = typeof initialState;\ntype AuthActionsType = InferActionsTypes<typeof actions>;\ntype ThunkType = BaseThunkType<AuthActionsType | FormAction>;\n\n\n","import React from 'react';\nimport Header from './Header';\nimport {connect} from 'react-redux';\nimport {AppRootStateType} from '../../redux/redux-store';\nimport {logout} from '../../redux/authReducer';\n\n\nclass HeaderContainer extends React.Component<UserAuthOwnPropsType> {\n\n    render() {\n        return (\n            <Header isAuth={this.props.isAuth} login={this.props.login}\n                    logout={this.props.logout}/>\n        )\n    }\n}\n\nconst MapStateToProps = (state: AppRootStateType): MapStateToPropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n})\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppRootStateType>(MapStateToProps, {logout: logout})(HeaderContainer);\n\n\n//Types\ntype MapStateToPropsType = {\n    isAuth: boolean\n    login: string | null\n}\n\ntype MapDispatchToPropsType = {\n    logout: () => void\n}\n\nexport type UserAuthOwnPropsType = MapStateToPropsType & MapDispatchToPropsType","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport styles from './Sidebar.module.css';\n\nimport profileImg from '../../assets/images/profile.jpg';\nimport dialogsImg from '../../assets/images/dialogs.jpg';\nimport usersImg from '../../assets/images/users.jpg';\nimport newsImg from '../../assets/images/news.jpg';\nimport musicImg from '../../assets/images/music.jpg';\nimport friendsImg from '../../assets/images/friends.jpg';\n\nimport Banner from './Banner/Banner';\nimport Nav from './Nav/Nav';\nimport HeaderContainer from '../Header/HeaderContainer';\n\nconst Sidebar = () => {\n    return (\n        <div className={styles.sidebar}>\n            <Route path=\"/profile\"\n                   render={() => <Banner image={profileImg} title={'Profile'}/>}/>\n            <Route path=\"/dialogs\"\n                   render={() => <Banner image={dialogsImg} title={'Dialogs'}/>}/>\n            <Route path=\"/users\"\n                   render={() => <Banner image={usersImg} title={'Users'}/>}/>\n            <Route path=\"/news\" render={() => <Banner image={newsImg} title={'News'}/>}/>\n            <Route path=\"/music\"\n                   render={() => <Banner image={musicImg} title={'Music'}/>}/>\n            <Route path=\"/friends\"\n                   render={() => <Banner image={friendsImg} title={'Friends'}/>}/>\n\n            <HeaderContainer/>\n            <Nav/>\n        </div>\n    )\n}\n\nexport default Sidebar;","import React from 'react';\nimport styles from './SocialLink.module.css';\n\ntype Props = {\n    link: string,\n    title: string\n}\n\nconst SocialLink = ({link, title}: Props) => {\n    return (\n        <div className={styles.socialLink}>\n            <a className={styles.link} href={link} target=\"_blank\"\n               rel=\"noopener noreferrer\">{title}</a>\n        </div>\n    )\n}\n\nexport default SocialLink;","import React from 'react';\nimport styles from './SocialLinks.module.css';\nimport SocialLink from './SocialLink/SocialLink';\n\nconst SocialLinks = () => {\n    return (\n        <section className={styles.socialLinks}>\n            <SocialLink link={'https://www.linkedin.com/in/yantsev1ch/'}\n                        title=\"LinkedIn\"/>\n            <SocialLink link={'https://github.com/yantsev1ch'} title=\"Github\"/>\n            <SocialLink link={'https://t.me/yantsev1ch'} title=\"Telegram\"/>\n        </section>\n    )\n}\n\nexport default SocialLinks;","import React from 'react';\nimport styles from './Footer.module.css';\nimport SocialLinks from './SocialLinks/SocialLinks';\n\nconst Footer = () => {\n    return (\n        <div className={styles.footer}>\n            <SocialLinks/>\n            <p className={styles.copyright}>© Created by Andrey Yantsevich</p>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport styles from './News.module.css';\n\nconst News = () => {\n    return (\n        <div className={styles.news}>\n            <h1>News</h1>\n        </div>\n    )\n}\n\nexport default News;","import React from 'react';\nimport styles from './Music.module.css';\n\nconst Music = () => {\n    return (\n        <div className={styles.music}>\n            <h1>Music</h1>\n        </div>\n    )\n}\n\nexport default Music;","import React from 'react';\nimport styles from './Friends.module.css';\n\nconst Friends = () => {\n    return (\n        <div className={styles.friends}>\n            <h1>Friends</h1>\n        </div>\n    )\n}\n\nexport default Friends;","import React from 'react';\nimport styles from './LoginForm.module.css';\nimport {InjectedFormProps, reduxForm} from 'redux-form';\nimport {createField, GetStringKeys, Input} from '../../common/FormControls/FormControls';\nimport {requiredField} from '../../../utils/validators/validators';\n\nexport type LoginFormDataType = {\n    email: string\n    password: string\n    rememberMe: boolean\n    captcha: string\n}\n\ntype LoginFormValuesTypeKeys = GetStringKeys<LoginFormDataType>\n\ntype OwnPropsType = {\n    captchaUrl: string | null\n}\n\ntype ErrorType = {\n    error: string\n}\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormDataType, OwnPropsType, ErrorType> & OwnPropsType> = ({\n                                                                                                               handleSubmit,\n                                                                                                               captchaUrl,\n                                                                                                               error\n                                                                                                           }) => {\n    return (\n        <form className={styles.form} onSubmit={handleSubmit}>\n            <div className={styles.settings}>\n                <p>\n                    To log in get registered <a\n                    href={'https://social-network.samuraijs.com/'}\n                    target={'_blank'}>here</a>\n                </p>\n                <p>\n                    or use common test account credentials:\n                </p>\n                <p> Email: free@samuraijs.com\n                </p>\n                <p>\n                    Password: free\n                </p>\n            </div>\n\n            {error && <p className={styles.errorMsg}>{error}</p>}\n\n            {captchaUrl && <img src={captchaUrl} alt={'captcha'}/>}\n            {captchaUrl && createField<LoginFormValuesTypeKeys>('', 'captcha', [requiredField], Input)}\n\n            <div className={styles.formRow}>\n                <label htmlFor=\"login_login\">Login</label>\n                {createField<LoginFormValuesTypeKeys>('', 'email', [requiredField], Input)}\n            </div>\n            <div className={styles.formRow}>\n                <label htmlFor=\"login_psw\">Password</label>\n                {createField<LoginFormValuesTypeKeys>('', 'password', [requiredField], Input, {type: 'password'})}\n            </div>\n            <div className={styles.formRow}>\n                {createField<LoginFormValuesTypeKeys>('', 'rememberMe', [], Input, {\n                    type: 'checkbox',\n                    className: styles.inputCheckbox\n                }, 'Remember me')}\n            </div>\n            <div className={styles.formRow}>\n                <button\n                    type={'submit'}\n                    className={styles.button}>Send\n                </button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default reduxForm<LoginFormDataType, OwnPropsType, ErrorType>({\n    // a unique name for the form\n    form: 'login'\n})(LoginForm)","import React from 'react';\nimport styles from './Login.module.css';\nimport LoginForm, {LoginFormDataType} from './LoginForm/LoginForm';\nimport {connect} from 'react-redux';\nimport {login} from '../../redux/authReducer';\nimport {Redirect} from 'react-router-dom';\nimport {AppRootStateType} from '../../redux/redux-store';\n\nexport type MapDispatchType = {\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\n}\n\nexport type MapStateType = ReturnType<typeof mapStateToProps>\n\ntype PropsType = MapDispatchType & MapStateType\n\nconst Login: React.FC<PropsType> = ({login, captchaUrl, isAuth}) => {\n    const onSubmit = (formData: LoginFormDataType) => {\n        login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n\n    if (isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return (\n        <div className={styles.login}>\n            <h1>Login</h1>\n            <section className={styles.section}>\n                <LoginForm captchaUrl={captchaUrl} onSubmit={onSubmit}/>\n            </section>\n        </div>\n    )\n}\n\n\nlet mapStateToProps = (state: AppRootStateType) => {\n    return {\n        captchaUrl: state.auth.captchaUrl,\n        isAuth: state.auth.isAuth\n    }\n}\n\nconst MapDispatchToProps: MapDispatchType = {\n    login: login\n}\n\nexport default connect(mapStateToProps, MapDispatchToProps)(Login)","import {BaseThunkType, InferActionsTypes} from './redux-store';\nimport {getAuthUserData} from './authReducer';\n\n\nconst initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action: AppActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'app/INITIALIZED_SUCCESS':\n            return {...state, initialized: true}\n        default:\n            return state\n    }\n}\n\n\n//Actions\nexport const actions = {\n    initializedSuccess: () => ({type: 'app/INITIALIZED_SUCCESS'} as const)\n}\n\n//Thunks\nexport const initializeApp = (): ThunkType => async dispatch => {\n    try {\n        const promise = dispatch(getAuthUserData())\n        await Promise.all([promise])\n        dispatch(actions.initializedSuccess())\n    } catch (error) {\n        console.log(error)\n    }\n\n}\n\nexport default appReducer;\n\n\n//Types\ntype InitialStateType = typeof initialState;\ntype AppActionsType = InferActionsTypes<typeof actions>;\ntype ThunkType = BaseThunkType<AppActionsType>;","import React, {Suspense} from 'react';\nimport styles from './App.module.css';\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router';\nimport Sidebar from '../Sidebar/Sidebar';\nimport Footer from '../Footer/Footer';\nimport News from '../News/News';\nimport Music from '../Music/Music';\nimport Friends from '../Friends/Friends';\nimport Login from '../Login/Login';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {initializeApp} from '../../redux/appReducer';\nimport {AppRootStateType} from '../../redux/redux-store';\nimport Preloader from '../common/Preloader/Preloader';\n\nconst DialogsContainer = React.lazy(() => import('../Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('../Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('../Users/UsersContainer'));\n\n\nclass App extends React.Component<OwnPropsType> {\n\n    // catch all server errors\n    catchAllUnhandledErrors = function (promiseRejectionEvent: Event) {\n        console.log('Some error occured')\n        console.log(promiseRejectionEvent)\n    }\n\n    componentDidMount() {\n        this.props.initializeApp()\n        window.addEventListener('unhandlesrejection', this.catchAllUnhandledErrors)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandlesrejection', this.catchAllUnhandledErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className={styles.app}>\n                <main className={styles.main}>\n                    <div className={styles.sidebar}>\n                        <Sidebar/>\n                    </div>\n\n                    <div className={styles.content}>\n                        <div className={styles.contentMain}>\n                            <Switch>\n                                <Redirect exact from=\"/\" to=\"/profile\"/>\n                                <Route path=\"/login\" render={() => <Login/>}/>\n                                <Route path=\"/profile/:userId?\"\n                                       render={() => <Suspense fallback={\n                                           <Preloader/>}><ProfileContainer/></Suspense>}/>\n                                <Route path=\"/dialogs\"\n                                       render={() => <Suspense fallback={\n                                           <Preloader/>}><DialogsContainer/></Suspense>}/>\n                                <Route path=\"/users\"\n                                       render={() => <Suspense fallback={\n                                           <Preloader/>}><UsersContainer/></Suspense>}/>\n                                <Route path=\"/news\" render={() => <News/>}/>\n                                <Route path=\"/music\" render={() => <Music/>}/>\n                                <Route path=\"/friends\" render={() => <Friends/>}/>\n                                <Route path=\"*\" render={() => <div>404 NOT FOUND</div>}/>\n                            </Switch>\n                        </div>\n                        <div className={styles.footer}>\n                            <Footer/>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nconst MapStateToProps = (state: AppRootStateType): MapStateToPropsType => ({\n    initialized: state.app.initialized\n})\n\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect<MapStateToPropsType, MapDispatchToPropsType, null, AppRootStateType>(MapStateToProps, {initializeApp: initializeApp}))(App)\n\n\n// TYPES\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n}\n\ntype MapStateToPropsType = {\n    initialized: boolean\n}\n\ntype AppPropsType = MapDispatchToPropsType & MapStateToPropsType\n\ntype PathParamsType = {}\n\ntype OwnPropsType = RouteComponentProps<PathParamsType> & AppPropsType\n","import {Action, applyMiddleware, combineReducers, createStore} from 'redux';\nimport profileReducer from './profileReducer';\nimport dialogsReducer from './dialogsReducer';\nimport appReducer from './appReducer';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form'\nimport authReducer from './authReducer';\nimport usersReducer from './usersReducer';\n\nconst rootReducer = combineReducers({\n    profilePage: profileReducer,\n    messagesPage: dialogsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\n\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never;\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppRootStateType, unknown, A>;\nexport default store;\n\n// @ts-ignore\nwindow.store = store;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport store from './redux/redux-store';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1Je8e\",\"main\":\"App_main__2Bb2U\",\"sidebar\":\"App_sidebar__2aZqf\",\"content\":\"App_content__2C8oy\",\"contentMain\":\"App_contentMain__3n_89\",\"footer\":\"App_footer__cC4pk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3N5LP\",\"title\":\"Header_title__2MH6S\",\"loginBlock\":\"Header_loginBlock__1_lba\",\"loginLink\":\"Header_loginLink__16unK\",\"logout\":\"Header_logout__Y-sqo\"};","import React from 'react';\nimport styles from './Preloader.module.css';\nimport preloader from '../../../assets/images/loader.svg';\n\nconst Preloader = () => {\n    return (\n        <div className={styles.wrapper}>\n            <img src={preloader} className={styles.img} alt=\"loader\"/>\n        </div>\n    )\n}\n\nexport default Preloader;","export type RequiredFieldType = (value: string) => string | undefined\n\nexport const requiredField: RequiredFieldType = (value: string) => {\n    if (value) return undefined\n    return 'Field is required'\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\n    return undefined\n}\n\n","import axios from 'axios';\n\n// axios general settings, axios params -> baseUrl and config\n// instance makes auto concat for baseUrl and another axios config\nexport const instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\n    withCredentials: true,\n    headers: {\n        'API-KEY': '7e5b4528-2880-4677-b629-b878b7697787'\n    }\n})\n\n\nexport type APIResponseType<D = {}, RC = ResultCodeStatus> = {\n    data: D\n    messages: Array<string>\n    resultCode: RC\n}\nexport enum ResultCodeStatus {\n    'success' = 0,\n    'error' = 1,\n    'captchaIsRequired' = 10\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copyright\":\"Footer_copyright__19Rzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialLink\":\"SocialLink_socialLink__3h2HL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Login_section__1CXTH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__2h-ht\",\"img\":\"Preloader_img__2_Qxq\"};","import {PhotosType, ProfileType} from '../types/types';\r\nimport {APIResponseType, instance} from './api';\r\n\r\nexport const profileAPI = {\r\n    getUser(userId: string) {\r\n        return instance.get<ProfileType>(`/profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getStatus(userId: string) {\r\n        return instance.get<string>(`/profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`/profile/status`, {status})\r\n            .then(response => response.data)\r\n    },\r\n\r\n    savePhoto(file: File) {\r\n        let formData = new FormData()\r\n        formData.append('image', file)\r\n        return instance.put<APIResponseType<{ photos: PhotosType }>>(`/profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => response.data)\r\n    },\r\n\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`/profile`, profile)\r\n            .then(response => response.data)\r\n    }\r\n}","import {v1} from 'uuid'\nimport {PhotosType, ProfileType} from '../types/types';\nimport {FormAction, stopSubmit} from 'redux-form';\nimport {profileAPI} from '../api/profileAPI';\nimport {ResultCodeStatus} from '../api/api';\nimport {BaseThunkType, InferActionsTypes} from './redux-store';\n\n\nconst initialState = {\n    posts: [\n        {id: v1(), message: 'Hi World! How are you?', likesCounter: 75},\n        {id: v1(), message: 'Today is a good day!', likesCounter: 57},\n    ],\n    profile: null as ProfileType | null,\n    status: ''\n}\n\nconst profileReducer = (state = initialState, action: ProfileActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'profile/ADD_POST':\n            let newPost = {id: v1(), message: action.newPostBody, likesCounter: 0};\n            return {\n                ...state,\n                posts: [newPost, ...state.posts]\n            }\n        case 'profile/SET_USER_PROFILE':\n            return {\n                ...state,\n                profile: action.profile\n            }\n        case 'profile/SET_STATUS':\n            return {\n                ...state,\n                status: action.status\n            }\n        case 'profile/SAVE_PHOTO':\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.photos} as ProfileType\n            }\n        default:\n            return state\n    }\n}\n\n\n//Actions\nexport const actions = {\n    addPost: (newPostBody: string) =>\n        ({type: 'profile/ADD_POST', newPostBody} as const),\n    setUserProfile: (profile: ProfileType) =>\n        ({type: 'profile/SET_USER_PROFILE', profile} as const),\n    setStatus: (status: string) =>\n        ({type: 'profile/SET_STATUS', status} as const),\n    setPhoto: (photos: PhotosType) =>\n        ({type: 'profile/SAVE_PHOTO', photos} as const),\n}\n\n\n//Thunks\nexport const getUserProfile = (userId: string): ThunkType => async dispatch => {\n    try {\n        const response = await profileAPI.getUser(userId)\n        dispatch(actions.setUserProfile(response))\n    } catch (error) {\n        console.log(error)\n    }\n\n}\nexport const getUserStatus = (userId: string): ThunkType => async dispatch => {\n    try {\n        const response = await profileAPI.getStatus(userId)\n        dispatch(actions.setStatus(response))\n    } catch (error) {\n        console.log(error)\n    }\n\n}\nexport const updateStatus = (status: string): ThunkType => async dispatch => {\n    try {\n        const response = await profileAPI.updateStatus(status)\n        if (response.resultCode === ResultCodeStatus.success) {\n            dispatch(actions.setStatus(status))\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const savePhoto = (file: File): ThunkType => async dispatch => {\n    try {\n        const response = await profileAPI.savePhoto(file)\n        if (response.resultCode === ResultCodeStatus.success) {\n            dispatch(actions.setPhoto(response.data.photos))\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\n    const response = await profileAPI.saveProfile(profile)\n    const userId = getState().auth.userId\n    if (response.resultCode === ResultCodeStatus.success) {\n        if (userId) {\n            dispatch(getUserProfile(userId))\n        }\n    } else {\n        // get error message from server\n        const message = response.messages.length > 0 ? response.messages[0] : 'Some Error'\n        // stop form submit if fields are wrong\n        dispatch(stopSubmit('edit-profile', {_error: message}))\n        return Promise.reject(message)\n    }\n}\n\nexport default profileReducer;\n\n\n//Types\ntype InitialStateType = typeof initialState;\ntype ProfileActionsType = InferActionsTypes<typeof actions>;\ntype ThunkType = BaseThunkType<ProfileActionsType | FormAction>;\n\n\n\n\n\n"],"sourceRoot":""}