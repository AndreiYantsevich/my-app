{"version":3,"sources":["hoc/withAuthRedirect.tsx","assets/images/avatar.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToProps","state","isAuth","auth","WithAuthRedirect","Component","connect","props","restProps","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChangeModeHandler","updateUserStatus","onDoubleClick","autoFocus","onBlur","onChange","e","currentTarget","ProfileInfo","memo","profile","updateUserPhoto","Preloader","className","style","descriptionBlock","image","src","photos","large","defaultAvatar","alt","type","target","files","aboutMe","fullName","userId","Post","React","item","message","likesCount","maxLength10","maxLengthCreator","MyPosts","postsElements","this","posts","map","p","id","postsBlock","AddNewPostFormRedux","onSubmit","formData","addPost","newPostText","PureComponent","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","actions","Profile","MyPostsContainer","ProfileContainer","userID","match","params","authorizedUserId","history","getUserProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.7d7d833c.chunk.js","sourcesContent":["import React, {ComponentType, FC} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {RootStateType} from '../store/store';\n\ntype MapStatePropsType = {\n    isAuth: boolean;\n}\ntype MapDispatchPropsType = {}\n\nconst mapStateToProps = (state: RootStateType) => ({\n    isAuth: state.auth.isAuth\n} as MapStatePropsType);\n\nfunction WithAuthRedirect<T>(Component: ComponentType<T>) {\n    const RedirectComponent: FC<MapStatePropsType & MapDispatchPropsType> = (props) => {\n        let {isAuth, ...restProps} = props\n        if (!isAuth) return <Redirect to={'/login'}/>\n        return <Component {...restProps as T}/>;\n    }\n    return connect(mapStateToProps)(RedirectComponent);\n}\n\nexport default WithAuthRedirect;","export default __webpack_public_path__ + \"static/media/avatar.e5ee284b.png\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2cjM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__11O5J\",\"posts\":\"MyPosts_posts__2pFJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2xeR_\"};","import React, {ChangeEvent, FC, useEffect, useState} from 'react';\n\ntype PropsType = {\n    status: string;\n    updateUserStatus: (status: string) => void\n}\n\nconst ProfileStatusWithHooks: FC<PropsType> = (props) => {\n\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const onChangeModeHandler = () => {\n        setEditMode(!editMode)\n        props.updateUserStatus(status)\n    }\n\n    const onStatusChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                        <span onDoubleClick={onChangeModeHandler}>{props.status || '---'}</span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input autoFocus onBlur={onChangeModeHandler} onChange={onStatusChangeHandler}\n                    value={status}/>\n                </div>\n            }\n        </div>\n    );\n\n}\n\nexport default ProfileStatusWithHooks;","import React, {ChangeEvent, FC, memo} from 'react';\nimport style from './ProfileInfo.module.css';\nimport {ProfilePropsType} from '../Profile';\nimport Preloader from '../../common/Preloader/Preloader';\nimport defaultAvatar from '../../../assets/images/avatar.png'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo: FC<ProfilePropsType> = memo(({\n                                                    profile,\n                                                    status,\n                                                    updateUserStatus,\n                                                    updateUserPhoto\n                                                }) => {\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const setMainPhoto = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length) {\n            updateUserPhoto(e.target.files[0]);\n        }\n    }\n\n    return (\n        <div>\n            <div className={style.descriptionBlock}>\n                <img className={style.image}\n                     src={profile.photos.large || defaultAvatar} alt={'avatar'}/>\n                <input type={'file'} onChange={setMainPhoto}/>\n                <ProfileStatusWithHooks status={status}\n                                        updateUserStatus={updateUserStatus}/>\n                <div>\n                    about me: {profile.aboutMe}\n                </div>\n                <div>\n                    fullName: {profile.fullName}\n                </div>\n                <div>\n                    userId: {profile.userId}\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default ProfileInfo;","import React from 'react';\nimport style from './Post.module.css';\n\nexport type PostType = {\n    id: number\n    message: string | undefined\n    likesCount: number\n}\n\nconst Post: React.FC<PostType> = React.memo((props) => {\n    return (\n        <div>\n            <div className={style.item}>\n                <img\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSxLkbtTa0kfmKizxJgqECQLdlt_xq1R2jEQQ&usqp=CAU\"\n                    alt=\"\"/>\n                {props.message}\n                <div>\n                    <span>like {props.likesCount}</span>\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default Post;","import React, {FC} from 'react';\nimport style from './MyPosts.module.css';\nimport Post, {PostType} from './Post/Post';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\nimport {maxLengthCreator, requiredField} from '../../../utils/validators/Validators';\nimport {Textarea} from '../../common/FormsControls/FormsControls';\n\ntype PropsType = {\n    posts: PostType[]\n    addPost: (newPostText: string) => void\n}\n\ntype FormDataType = {\n    newPostText: string\n}\n\nconst maxLength10 = maxLengthCreator(10);\n\nclass MyPosts extends React.PureComponent<PropsType> {\n\n    /*shouldComponentUpdate(nextProps: PropsType, nextState: {}): boolean {\n        return nextProps !== this.props || nextState !== this.state;\n    }*/\n\n    render() {\n\n        const postsElements = this.props.posts.map(p => <Post id={p.id}\n                                                              message={p.message}\n                                                              likesCount={p.likesCount}/>)\n\n        const addNewPost = (formData: FormDataType) => {\n            this.props.addPost(formData.newPostText)\n        }\n\n        return (\n            <div className={style.postsBlock}>\n                <h3>My posts</h3>\n                <AddNewPostFormRedux onSubmit={addNewPost}/>\n                <div className={style.posts}>\n                    {postsElements}\n                </div>\n            </div>\n        );\n    }\n};\n\nconst AddNewPostForm: FC<InjectedFormProps<FormDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name={'newPostText'}\n                       placeholder={'Enter your post'}\n                       validate={[requiredField, maxLength10]}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    );\n};\n\nconst AddNewPostFormRedux = reduxForm<FormDataType>({form: 'profileAddPostForm'})(AddNewPostForm)\n\nexport default MyPosts;","import MyPosts from './MyPosts';\nimport {connect} from 'react-redux';\nimport {RootStateType} from '../../../store/store';\nimport {\n    actions\n} from '../../../store/reducers/profile-reducer';\n\n\nconst mapStateToProps = (state: RootStateType) => {\n    return {\n        posts: state.profile.posts\n    }\n}\n\nexport default connect(mapStateToProps, {\n    addPost: actions.addPost,\n})(MyPosts)","import React, {FC, memo} from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport { ProfileType } from '../../types/types';\n\nexport type ProfilePropsType = {\n    profile: ProfileType | null\n    status: string\n    updateUserStatus: (status: string) => void\n    updateUserPhoto: (photo: File) => void\n}\n\nconst Profile: FC<ProfilePropsType> = memo((props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} updateUserPhoto={props.updateUserPhoto}/>\n            <MyPostsContainer/>\n        </div>\n    );\n});\n\nexport default Profile;","import React, {ComponentType} from 'react';\nimport Profile from './Profile';\nimport {connect} from 'react-redux';\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\nimport {\n    getUserProfile,\n    getUserStatus,\n    updateUserPhoto, updateUserStatus\n} from '../../store/reducers/profile-reducer';\nimport {RootStateType} from '../../store/store';\nimport WithAuthRedirect from '../../hoc/withAuthRedirect';\nimport {compose} from 'redux';\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\n\ntype MapDispatchPropsType = {\n    getUserProfile: (userID: number | null) => void\n    getUserStatus: (userID: number | null) => void\n    updateUserStatus: (status: string) => void\n    updateUserPhoto: (photo: File) => void\n}\ntype PathParamsType = {\n    userId: string\n}\n\ntype ownPropsType = MapStatePropsType & MapDispatchPropsType\ntype PropsType = RouteComponentProps<PathParamsType> & ownPropsType\n\nclass ProfileContainer extends React.Component<PropsType> {\n\n    componentDidMount() {\n        let userID: number | null = +this.props.match.params.userId\n        if (!userID) {\n            userID = this.props.authorizedUserId\n            if (!userID) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfile(userID);\n        this.props.getUserStatus(userID);\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateUserStatus={this.props.updateUserStatus}\n                     updateUserPhoto={this.props.updateUserPhoto}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: RootStateType) => ({\n    profile: state.profile.profile,\n    status: state.profile.status,\n    authorizedUserId: state.auth.id\n})\n\nexport default compose<ComponentType>(\n    connect(mapStateToProps, {\n        getUserProfile,\n        getUserStatus,\n        updateUserStatus,\n        updateUserPhoto\n    }),\n    withRouter,\n    WithAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}