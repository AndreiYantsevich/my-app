{"version":3,"sources":["store/reducers/dialogs-reducer.ts","store/reducers/users-reducer.ts","utils/object-helpers.ts","api/api.ts","components/Navbar/Navbar.module.css","store/reducers/auth-reducer.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","store/reducers/app-reducer.ts","store/store.ts","hoc/withSuspense.tsx","App.tsx","index.tsx","components/common/FormsControls/FormsControls.tsx","components/common/FormsControls/FormsControls.module.css","components/common/Preloader/Preloader.tsx","utils/validators/Validators.ts","components/Header/Header.module.css","components/common/Preloader/Preloader.module.css","store/reducers/profile-reducer.ts"],"names":["DialogsEnum","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","ADD_MESSAGE","newMessage","length","newMessageText","actions","addMessage","UsersEnum","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","FOLLOW","userID","followed","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","totalCount","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","filter","requestUsers","page","dispatch","a","usersAPI","getUsers","response","data","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","followAPI","followUsers","bind","unfollow","unfollowUsers","ResultCodesEnum","instance","axios","create","withCredentials","baseURL","headers","get","post","delete","authAPI","me","login","email","password","rememberMe","logout","profileAPI","getUserProfile","userId","getUserStatus","updateUserStatus","status","put","updateUserPhoto","photo","formData","FormData","append","module","exports","AuthEnum","Navbar","React","memo","className","style","nav","item","active","to","activeClassName","News","Music","Settings","Header","props","header","loginBlock","isAuth","onClick","SET_USER_DATA","payload","getAuthUserData","HeaderContainer","this","Component","connect","auth","LoginForm","handleSubmit","error","onSubmit","createField","Input","requiredField","formSummaryError","LoginReduxForm","reduxForm","form","Success","Error","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","rootReducer","combineReducers","profile","profileReducer","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","withSuspense","WrappedComponent","restProps","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","path","render","component","AppContainer","withRouter","promise","Promise","all","then","SamuraiTSApp","ReactDOM","document","getElementById","FormControl","input","meta","touched","Formtype","hasError","styles","formControl","Textarea","placeholder","validators","text","validate","preloader","spinner","value","undefined","maxLengthCreator","maxLength","ProfileEnum","posts","likesCount","ADD_POST","newPost","newPostText","SET_USER_PROFILE","SET_USER_STATUS","SET_USER_PHOTO","photos","DELETE_POST","p","postId","addPost","setUserProfile","setUserStatus","setUserPhoto","deletePost"],"mappings":"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","file":"static/js/main.4b9b3eb8.chunk.js","sourcesContent":["import {InferActionsTypes} from '../store';\n\ntype DialogsType = {\n    id: number,\n    name: string\n}\n\ntype MessageType = {\n    id: number,\n    message: string\n}\n\nexport enum DialogsEnum {\n    ADD_MESSAGE = 'dialogs/ADD_MESSAGE'\n}\n\nconst initialState = {\n    dialogs: [\n        {id: 1, name: 'Andrei'},\n        {id: 2, name: 'Viktoria'},\n        {id: 3, name: 'Arseny'},\n        {id: 4, name: 'Visha'},\n        {id: 5, name: 'Tomas'}\n    ] as Array<DialogsType>,\n    messages: [\n        {id: 1, message: 'Hello!!!'},\n        {id: 2, message: 'Mi-mi-mi'},\n        {id: 3, message: 'Agu!'},\n        {id: 4, message: 'Gav!'},\n        {id: 5, message: 'Meow!'}\n    ] as Array<MessageType>\n}\n\nexport default function dialogsReducer(state = initialState, action: ActionsType): InitialStateType {\n\n    switch (action.type) {\n        case DialogsEnum.ADD_MESSAGE:\n            let newMessage = {\n                id: state.messages.length + 1,\n                message: action.newMessageText\n            }\n            return {\n                ...state,\n                messages: [...state.messages, newMessage],\n            }\n        default:\n            return state\n    }\n}\n\nexport const actions = {\n    addMessage: (newMessageText: string) => ({\n        type: DialogsEnum.ADD_MESSAGE,\n        newMessageText\n    } as const)\n}\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\n","import {followAPI, usersAPI} from '../../api/api';\nimport {ThunkAction} from 'redux-thunk';\nimport {InferActionsTypes, RootStateType} from '../store';\nimport {UserType} from '../../types/types';\nimport {ActionCreator, Dispatch} from 'redux';\nimport {updateObjectInArray} from '../../utils/object-helpers';\n\nexport enum UsersEnum {\n    FOLLOW = 'users/FOLLOW',\n    UNFOLLOW = 'users/UNFOLLOW',\n    SET_USERS = 'users/SET_USERS',\n    SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE',\n    SET_USERS_TOTAL_COUNT = 'users/SET_USERS_TOTAL_COUNT',\n    TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING',\n    TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS',\n}\n\nconst initialState = {\n    users: [] as Array<UserType>,\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [] as Array<number>,\n};\n\nexport default function usersReducer(state = initialState, action: ActionsType): InitialStateType {\n    switch (action.type) {\n        case UsersEnum.FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: true})\n            }\n        case UsersEnum.UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: false})\n            }\n        case UsersEnum.SET_USERS:\n            return {...state, users: action.users}\n        case UsersEnum.SET_CURRENT_PAGE:\n            return {...state, currentPage: action.currentPage}\n        case UsersEnum.SET_USERS_TOTAL_COUNT:\n            return {...state, totalUsersCount: action.totalCount}\n        case UsersEnum.TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching}\n        case UsersEnum.TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userID]\n                    : state.followingInProgress.filter(id => id !== action.userID)\n            }\n        default:\n            return state\n    }\n};\n\n//action creators\nexport const actions = {\n    followSuccess: (userID: number) => ({\n        type: UsersEnum.FOLLOW,\n        userID\n    } as const),\n    unfollowSuccess: (userID: number) => ({\n        type: UsersEnum.UNFOLLOW,\n        userID\n    } as const),\n    setUsers: (users: UserType[]) => ({\n        type: UsersEnum.SET_USERS,\n        users\n    } as const),\n    setCurrentPage: (currentPage: number) => ({\n        type: UsersEnum.SET_CURRENT_PAGE,\n        currentPage\n    } as const),\n    setUsersTotalCount: (totalCount: number) => ({\n        type: UsersEnum.SET_USERS_TOTAL_COUNT,\n        totalCount\n    } as const),\n    toggleIsFetching: (isFetching: boolean) => ({\n        type: UsersEnum.TOGGLE_IS_FETCHING,\n        isFetching\n    } as const),\n    toggleFollowingProgress: (isFetching: boolean, userID: number) => ({\n        type: UsersEnum.TOGGLE_IS_FOLLOWING_PROGRESS,\n        isFetching,\n        userID\n    } as const),\n}\n\n\n//thunk\nexport const requestUsers = (page: number, pageSize: number): UsersThunk => async dispatch => {\n    dispatch(actions.toggleIsFetching(true));\n    dispatch(actions.setCurrentPage(page));\n    let response = await usersAPI.getUsers(page, pageSize)\n\n    dispatch(actions.toggleIsFetching(false));\n    dispatch(actions.setUsers(response.data.items));\n    dispatch(actions.setUsersTotalCount(response.data.totalCount));\n};\n\nconst followUnfollowFlow = async (dispatch: Dispatch, userID: number, apiMethod: Function, actionCreator: ActionCreator<ActionsType>) => {\n    dispatch(actions.toggleFollowingProgress(true, userID));\n    let response = await apiMethod(userID)\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userID));\n    }\n    dispatch(actions.toggleFollowingProgress(false, userID));\n}\n\nexport const follow = (userID: number): UsersThunk => async dispatch => {\n    await followUnfollowFlow(dispatch, userID, followAPI.followUsers.bind(userID), actions.followSuccess);\n};\n\nexport const unfollow = (userID: number): UsersThunk => async dispatch => {\n    await followUnfollowFlow(dispatch, userID, followAPI.unfollowUsers.bind(userID), actions.unfollowSuccess);\n};\n\nexport type InitialStateType = typeof initialState;\nexport type ActionsType = InferActionsTypes<typeof actions>\ntype UsersThunk<ReturnType = void> = ThunkAction<ReturnType, RootStateType, unknown, ActionsType>","import {UserType} from '../types/types';\n\nexport const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\n    return items.map((u: any) => (u[objPropName] === itemId)\n        ? {...u, ...newObjProps}\n        : u\n    )\n}","import axios from 'axios';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '7e5b4528-2880-4677-b629-b878b7697787'\n    },\n});\n\nexport enum ResultCodesEnum {\n    Success = 0,\n    Error = 1\n}\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`);\n    },\n};\n\nexport const followAPI = {\n    followUsers(id: number) {\n        return instance.post(`follow/${id}`, {});\n    },\n    unfollowUsers(id: number) {\n        return instance.delete(`follow/${id}`);\n    },\n};\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email: string, password: string, rememberMe: boolean = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe});\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    },\n};\n\nexport const profileAPI = {\n    getUserProfile(userId: number) {\n        return instance.get(`profile/` + userId);\n\n    },\n    getUserStatus(userId: number) {\n        return instance.get(`profile/status/` + userId);\n\n    },\n    updateUserStatus(status: string) {\n        return instance.put(`profile/status`, {status: status});\n\n    },\n    updateUserPhoto(photo: File) {\n        const formData = new FormData();\n        formData.append('image', photo);\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__v5pgu\",\"item\":\"Navbar_item__3dQB0\",\"active\":\"Navbar_active__3iO3f\"};","import {authAPI, ResultCodesEnum} from '../../api/api';\nimport {ThunkAction} from 'redux-thunk';\nimport {RootStateType} from '../store';\nimport {FormAction, stopSubmit} from 'redux-form';\n\nexport enum AuthEnum {\n    SET_USER_DATA = 'auth/SET_USER_DATA',\n}\n\nconst initialState = {\n    id: null as number | null,\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false,\n}\n\nexport default function authReducer(state = initialState, action: ActionsType): InitialStateType {\n    switch (action.type) {\n        case AuthEnum.SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n//action creators\nexport const actions = {\n    setAuthUserData: (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\n        type: AuthEnum.SET_USER_DATA, payload: {id, email, login, isAuth}\n    } as const),\n}\n\n//thunk\nexport const getAuthUserData = (): AuthThunk => async dispatch => {\n    let response = await authAPI.me()\n    if (response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data;\n        dispatch(actions.setAuthUserData(id, email, login, true))\n    }\n};\n\nexport const login = (email: string, password: string, rememberMe: boolean): AuthThunk => async dispatch => {\n    let response = await authAPI.login(email, password, rememberMe)\n    if (response.data.resultCode === ResultCodesEnum.Success) {\n        dispatch(getAuthUserData())\n    } else if (response.data.resultCode === ResultCodesEnum.Error) {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\n        dispatch(stopSubmit('login', {_error: message}))\n    }\n};\n\nexport const logout = (): AuthThunk => async dispatch => {\n    await authAPI.logout()\n    dispatch(actions.setAuthUserData(null, null, null, false))\n};\n\nexport type InitialStateType = typeof initialState;\ntype ActionsType = ReturnType<typeof actions.setAuthUserData>\ntype AuthThunk<ReturnType = void> = ThunkAction<ReturnType, RootStateType, unknown, ActionsType | FormAction>\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport style from './Navbar.module.css';\n\nconst Navbar: React.FC = React.memo(() => {\n    return (\n        <nav className={style.nav}>\n            <div className={`${style.item} ${style.active}`}>\n                <NavLink to={'/profile'} activeClassName={style.active}>Profile</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={'/users'} activeClassName={style.active}>Users</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={'/dialogs'} activeClassName={style.active}>Messages</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={'/news'} activeClassName={style.active}>News</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={'/music'} activeClassName={style.active}>Music</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={'/settings'} activeClassName={style.active}>Settings</NavLink>\n            </div>\n        </nav>\n    );\n});\n\nexport default Navbar;","import React from 'react';\n\nconst News: React.FC = React.memo(() => {\n    return (\n        <div>\n            News\n        </div>\n    );\n});\n\nexport default News;","import React from 'react';\n\nconst Music: React.FC = React.memo(() => {\n    return (\n        <div>\n            Music\n        </div>\n    );\n});\n\nexport default Music;","import React from 'react';\n\nconst Settings: React.FC = React.memo(() => {\n    return (\n        <div>\n            Settings\n        </div>\n    );\n});\n\nexport default Settings;","import React, {FC, memo} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport style from './Header.module.css';\nimport {HeaderPropsType} from './HeaderContainer';\n\nconst Header: FC<HeaderPropsType> = memo((props) => {\n\n    return (\n        <header className={style.header}>\n            <div className={style.loginBlock}>\n                {props.isAuth\n                    ? <div>{props.login} - <button onClick={props.logout}>\n                        Log Out</button>\n                    </div>\n                    : <NavLink to={'/login'}>Login</NavLink>\n                }\n            </div>\n        </header>\n    );\n});\n\nexport default Header;","import React from 'react';\nimport Header from './Header';\nimport {RootStateType} from '../../store/store';\nimport {connect} from 'react-redux';\nimport {logout} from '../../store/reducers/auth-reducer';\n\ntype MapStatePropsType = {\n    isAuth: boolean\n    login: string | null\n}\ntype MapDispatchPropsType = {\n    logout: () => void;\n}\n\nexport type HeaderPropsType = MapStatePropsType & MapDispatchPropsType;\n\nclass HeaderContainer extends React.Component<HeaderPropsType> {\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        );\n    }\n}\n\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React, {FC, memo} from 'react';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\nimport {RootStateType} from '../../store/store';\nimport {Redirect} from 'react-router-dom';\nimport {createField, Input} from '../common/FormsControls/FormsControls';\nimport {requiredField} from '../../utils/validators/Validators';\nimport {login} from '../../store/reducers/auth-reducer';\nimport style from '../common/FormsControls/FormsControls.module.css';\n\ntype FormDataType = {\n    email: string;\n    password: string;\n    rememberMe: boolean;\n}\n\ntype MapStatePropsType = {\n    isAuth: boolean;\n}\n\ntype MapDispatchPropsType = {\n    login: (email: string, password: string, rememberMe: boolean) => void;\n}\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType\n\nconst LoginForm: FC<InjectedFormProps<FormDataType>> = memo(({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField('Email', 'email', Input, [requiredField])}\n            {createField('Password', 'password', Input, [requiredField], '', {type: 'password'})}\n            {createField(null, 'rememberMe', Input, [], 'remember me', {type: 'checkbox'})}\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    );\n});\n\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\n\nconst Login: FC<PropsType> = (props) => {\n    const onSubmit = (formData: FormDataType) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => ({\n    isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {login})(Login);","import {ThunkAction} from 'redux-thunk';\nimport {RootStateType} from '../store';\nimport {FormAction} from 'redux-form';\nimport {getAuthUserData} from './auth-reducer';\n\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\n\nconst initialState = {\n    initialized: false\n}\nexport default function appReducer(state = initialState, action: ActionsType): InitialStateType {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS} as const);\n\nexport const initializeApp = (): AppThunk => dispatch => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise]).then(() => {\n        dispatch(initializedSuccess());\n    })\n}\n\ntype InitialStateType = typeof initialState;\ntype ActionsType = ReturnType<typeof initializedSuccess>;\ntype AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootStateType, unknown, ActionsType | FormAction>;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport dialogsReducer from './reducers/dialogs-reducer';\nimport profileReducer from './reducers/profile-reducer';\nimport usersReducer from './reducers/users-reducer';\nimport authReducer from './reducers/auth-reducer';\nimport thunk from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form';\nimport appReducer from './reducers/app-reducer';\n\nconst rootReducer = combineReducers({\n    dialogs: dialogsReducer,\n    profile: profileReducer,\n    users: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport type RootStateType = ReturnType<RootReducerType>;\ntype RootReducerType = typeof rootReducer;\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never;\ndeclare global {\n    interface Window {\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\n","import React, {ComponentType, Suspense} from 'react';\nimport Preloader from '../components/common/Preloader/Preloader';\n\nexport function withSuspense<WCP>(WrappedComponent: ComponentType<WCP>) {\n    return (props: any) => {\n        let {...restProps} = props\n        return (\n            <Suspense fallback={<Preloader/>}>\n                <WrappedComponent {...restProps as WCP}/>\n            </Suspense>\n        )\n    }\n}","import React, {ComponentType, lazy} from 'react';\nimport {HashRouter, Route, withRouter} from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport {connect, Provider} from 'react-redux';\nimport {compose} from 'redux';\nimport {initializeApp} from './store/reducers/app-reducer';\nimport {RootStateType, store} from './store/store';\nimport Preloader from './components/common/Preloader/Preloader';\nimport {withSuspense} from './hoc/withSuspense';\n\nconst DialogsContainer = lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\nconst UsersContainer = lazy(() => import('./components/Users/UsersContainer'));\n\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n}\ntype MapStateToPropsType = {\n    initialized: boolean\n}\nconst mapStateToProps = (state: RootStateType) => ({\n    initialized: state.app.initialized\n})\nexport type AppPropsType = MapDispatchToPropsType & MapStateToPropsType\n\nclass App extends React.Component<AppPropsType> {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className={'app-wrapper'}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <Route path={'/dialogs'} render={withSuspense(DialogsContainer)}/>\n                    <Route path={'/profile/:userId?'}\n                           render={withSuspense(ProfileContainer)}/>\n                    <Route path={'/users'} render={withSuspense(UsersContainer)}/>\n                    <Route path={'/login'} render={() => <Login/>}/>\n                    <Route path={'/news'} component={News}/>\n                    <Route path={'/music'} component={Music}/>\n                    <Route path={'/settings'} component={Settings}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst AppContainer = compose<ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nexport const SamuraiTSApp = () => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </HashRouter>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {SamuraiTSApp} from './App';\n\nReactDOM.render(\n    <SamuraiTSApp/>,\n    document.getElementById('root')\n);\n","import React, {Component, FC} from 'react';\nimport styles from './FormsControls.module.css';\nimport {Field} from 'redux-form';\n\ntype PropsType = {\n    input: any\n    meta: any\n    Formtype: any\n}\n\nconst FormControl: FC<PropsType> = ({input, meta: {touched, error}, Formtype, ...props}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <div>\n                <Formtype {...input} {...props} />\n            </div>\n            <div>\n                {hasError && <span>{error}</span>}\n            </div>\n        </div>\n\n    )\n}\n\nexport const Textarea = (props: PropsType) => {\n    return <FormControl {...props} Formtype=\"textarea\"/>\n}\n\nexport const Input = (props: PropsType) => {\n    return <FormControl {...props} Formtype=\"input\"/>\n}\n\nexport const createField = (placeholder: string | null, name: string, component: Function, validators: Array<any>, text?: string, props?: any) => (\n    <div>\n        <Field placeholder={placeholder} name={name} component={component}\n               validate={validators} {...props}/>{text}\n    </div>\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__389fm\",\"error\":\"FormsControls_error__3Aizu\",\"formSummaryError\":\"FormsControls_formSummaryError__2Dihg\"};","import React from 'react';\nimport styles from './Preloader.module.css'\n\n\nconst Preloader: React.FC = React.memo(() => {\n    return (\n        <div className={styles.preloader}>\n            <div className={styles.spinner}>/</div>\n        </div>\n    );\n});\n\nexport default Preloader;","export const requiredField = (value: any) => {\n    return value ? undefined : 'Field is required'\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: any) => {\n    return value.length > maxLength ? `Max length is ${maxLength} symbols` : undefined\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3N5LP\",\"loginBlock\":\"Header_loginBlock__1_lba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__18uvi\",\"spinner\":\"Preloader_spinner__3x-Fg\",\"spin\":\"Preloader_spin__1rC3G\"};","import {profileAPI} from '../../api/api';\nimport {ThunkAction} from 'redux-thunk';\nimport {InferActionsTypes, RootStateType} from '../store';\nimport {PhotosType, PostType, ProfileType} from '../../types/types';\n\nexport enum ProfileEnum {\n    ADD_POST = 'profile/ADD_POST',\n    SET_USER_PROFILE = 'profile/SET_USER_PROFILE',\n    SET_USER_STATUS = 'profile/SET_USER_STATUS',\n    SET_USER_PHOTO = 'profile/SET_USER_PHOTO',\n    DELETE_POST = 'profile/DELETE_POST',\n}\n\nconst initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 25},\n        {id: 2, message: 'This is my first project', likesCount: 49}\n    ] as Array<PostType>,\n    profile: null as ProfileType | null,\n    status: '',\n};\n\nexport default function profileReducer(state = initialState, action: ActionsType): InitialStateType {\n\n    switch (action.type) {\n        case ProfileEnum.ADD_POST: {\n            const newPost = {\n                id: state.posts.length + 1,\n                message: action.newPostText,\n                likesCount: 0\n            }\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            }\n        }\n        case ProfileEnum.SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case ProfileEnum.SET_USER_STATUS: {\n            return {...state, status: action.status}\n        }\n        case ProfileEnum.SET_USER_PHOTO: {\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.photos} as ProfileType\n            }\n        }\n        case ProfileEnum.DELETE_POST: {\n            return {\n                ...state, posts: state.posts.filter(p => p.id !== action.postId)\n            }\n\n        }\n        default: {\n            return state\n        }\n    }\n};\n\n//action creators\nexport const actions = {\n    addPost: (newPostText: string) => ({\n        type: ProfileEnum.ADD_POST,\n        newPostText\n    } as const),\n    setUserProfile: (profile: ProfileType) => ({\n        type: ProfileEnum.SET_USER_PROFILE,\n        profile\n    } as const),\n    setUserStatus: (status: string) => ({\n        type: ProfileEnum.SET_USER_STATUS,\n        status\n    } as const),\n    setUserPhoto: (photos: PhotosType) => ({\n        type: ProfileEnum.SET_USER_PHOTO,\n        photos\n    } as const),\n    deletePost: (postId: number) => ({type: ProfileEnum.DELETE_POST, postId} as const),\n}\n\n//thunk\nexport const getUserProfile = (userID: number): ProfileThunk => async dispatch => {\n    let response = await profileAPI.getUserProfile(userID)\n    dispatch(actions.setUserProfile(response.data));\n};\nexport const getUserStatus = (userID: number): ProfileThunk => async dispatch => {\n    let response = await profileAPI.getUserStatus(userID)\n    dispatch(actions.setUserStatus(response.data));\n};\nexport const updateUserStatus = (status: string): ProfileThunk => async dispatch => {\n    let response = await profileAPI.updateUserStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(actions.setUserStatus(status));\n    }\n};\nexport const updateUserPhoto = (photo: File): ProfileThunk => async dispatch => {\n    let response = await profileAPI.updateUserPhoto(photo)\n    if (response.data.resultCode === 0) {\n        dispatch(actions.setUserPhoto(response.data.data.photos))\n    }\n}\n\nexport type InitialStateType = typeof initialState;\nexport type ActionsType = InferActionsTypes<typeof actions>\ntype ProfileThunk<ReturnType = void> = ThunkAction<ReturnType, RootStateType, unknown, ActionsType>\n"],"sourceRoot":""}