{"version":3,"sources":["api/api.ts","redux/dialogsReducer.tsx","redux/usersReducer.tsx","components/Sidebar/Sidebar.module.css","assets/images/profile.jpg","assets/images/dialogs.jpg","assets/images/users.jpg","assets/images/news.jpg","assets/images/music.jpg","assets/images/friends.jpg","components/Sidebar/Banner/Banner.module.css","components/Footer/SocialLinks/SocialLinks.module.css","components/Sidebar/Nav/Nav.module.css","assets/images/loader.svg","components/common/FormControls/FormControls.module.css","types/types.tsx","components/Login/LoginForm/LoginForm.module.css","serviceWorker.ts","components/Sidebar/Banner/Banner.tsx","components/Sidebar/Nav/Nav.tsx","components/Header/Header.tsx","redux/authReducer.tsx","components/Header/HeaderContainer.tsx","components/Sidebar/Sidebar.tsx","components/Footer/SocialLinks/SocialLink/SocialLink.tsx","components/Footer/SocialLinks/SocialLinks.tsx","components/Footer/Footer.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Friends/Friends.tsx","components/Login/LoginForm/LoginForm.tsx","components/Login/Login.tsx","redux/appReducer.tsx","components/App/App.tsx","redux/redux-store.tsx","index.tsx","components/App/App.module.css","components/Header/Header.module.css","utils/validators/validators.ts","components/common/Preloader/Preloader.tsx","components/common/FormControls/FormControls.tsx","components/Footer/Footer.module.css","components/Footer/SocialLinks/SocialLink/SocialLink.module.css","components/Login/Login.module.css","components/common/Preloader/Preloader.module.css","redux/profileReducer.tsx"],"names":["instance","axios","create","baseURL","withCredentials","headers","authAPI","me","get","then","response","data","login","email","password","rememberMe","captcha","post","logout","delete","usersAPI","getUsers","currentPage","pageSize","profileAPI","getUser","userId","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","saveProfile","profile","followAPI","unfollowUser","followUser","securityAPI","getCaptchaUrl","initialState","dialogs","id","v1","name","messages","message","addMessageAC","newMessageBody","type","ADD_MESSAGE","dialogsReducer","state","action","users","totalUsersCount","isFetching","followingInProgress","followSuccessAC","FOLLOW","unFollowSuccessAC","UNFOLLOW","setCurrentPageAC","SET_CURRENT_PAGE","toggleIsFetchingAC","TOGGLE_IS_FETCHING","toggleFollowingInProgressAC","TOGGLE_FOLLOWING_PROGRESS","requestUsersTC","page","dispatch","a","items","SET_USERS","totalCount","SET_TOTAL_COUNT","followUsersTC","resultCode","unfollowUsersTC","usersReducer","map","u","followed","filter","module","exports","ResultCodeStatus","userProfile","lookingForAJob","lookingForAJobDescription","fullName","aboutMe","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","photos","small","large","Boolean","window","location","hostname","match","Banner","props","className","styles","banner","src","image","alt","title","Nav","nav","to","link","activeClassName","activeLink","Header","header","loginBlock","isAuth","onClick","loginLink","captchaUrl","setAuthUserDataAC","SET_USER_DATA","getCaptchaUrlSuccessAC","GET_CAPTCHA_URL_SUCCESS","payload","getAuthUserDataTC","success","getCaptchaUrlTC","url","authReducer","HeaderContainer","this","React","Component","connect","auth","Sidebar","sidebar","path","render","profileImg","dialogsImg","usersImg","newsImg","musicImg","friendsImg","SocialLink","socialLink","href","target","rel","SocialLinks","socialLinks","Footer","footer","copyright","News","news","Music","music","Friends","friends","maxLength","maxLengthCreator","reduxForm","form","handleSubmit","error","onSubmit","errorMsg","Field","component","Input","validate","required","placeholder","formRow","htmlFor","InputPsw","inputCheckbox","button","MapDispatchToProps","length","stopSubmit","_error","section","initialized","appReducer","INITIALIZED_SUCCESS","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","catchAllUnhandledErrors","promiseRejectionEvent","console","log","initializeApp","addEventListener","removeEventListener","app","main","content","contentMain","exact","from","fallback","Preloader","compose","withRouter","promise","Promise","all","reducers","combineReducers","profilePage","profileReducer","messagesPage","usersPage","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","value","wrapper","preloader","img","Textarea","hasError","meta","touched","formControl","input","textarea","inputText","posts","likesCounter","addPostAC","newPostBody","ADD_POST","setStatusAC","SET_STATUS","setUserProfileTC","SET_USER_PROFILE","getUserStatusTC","updateStatusTC","savePhotoTC","SAVE_PHOTO","saveProfileTC","getState","reject","newPost"],"mappings":"uHAAA,uLAKMA,EALN,OAKiBC,EAAMC,OAAO,CAC1BC,QAAS,+CACTC,iBAAiB,EACjBC,QAAS,CACL,UAAW,0CAINC,EAAU,CACnBC,GADmB,WAEf,OAAOP,EAASQ,IAAT,YACFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGnCC,MANmB,SAMbC,EAAeC,GAA+E,IAA7DC,EAA4D,wDAA/BC,EAA+B,uDAAN,KACzF,OAAOhB,EAASiB,KAAT,cAA6B,CAACJ,QAAOC,WAAUC,aAAYC,YAC7DP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGnCO,OAXmB,WAYf,OAAOlB,EAASmB,OAAT,eACFV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAI1BS,EAAW,CACpBC,SADoB,WACsC,IAAjDC,EAAgD,uDAA1B,EAAGC,EAAuB,uDAAJ,GACjD,OAAOvB,EAASQ,IAAT,sBAA4Bc,EAA5B,kBAAiDC,EAAjD,mBACFd,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAK1Ba,EAAa,CACtBC,QADsB,SACdC,GACJ,OAAO1B,EAASQ,IAAT,mBAAyBkB,KAGpCC,UALsB,SAKZD,GACN,OAAO1B,EAASQ,IAAT,0BAAgCkB,KAG3CE,aATsB,SASTC,GACT,OAAO7B,EAAS8B,IAAT,kBAAgC,CAACD,YAG5CE,UAbsB,SAaZC,GACN,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,QAASH,GAClBhC,EAAS8B,IAAT,iBAA+BG,EAAU,CAC5C5B,QAAS,CACL,eAAgB,yBAGnBI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGnCyB,YAxBsB,SAwBVC,GACR,OAAOrC,EAAS8B,IAAT,WAAyBO,KAI3BC,EAAY,CAErBC,aAFqB,SAERb,GACT,OAAO1B,EAASmB,OAAT,kBAA2BO,KAGtCc,WANqB,SAMVd,GACP,OAAO1B,EAASiB,KAAT,kBAAyBS,MAK3Be,EAAc,CAEvBC,cAFuB,WAGnB,OAAO1C,EAASQ,IAAI,gC,8FChFtBmC,EAAe,CACjBC,QAAS,CACL,CAACC,GAAIC,cAAMC,KAAM,QACjB,CAACF,GAAIC,cAAMC,KAAM,QACjB,CAACF,GAAIC,cAAMC,KAAM,SAErBC,SAAU,CACN,CAACH,GAAIC,cAAMG,QAAS,oBACpB,CAACJ,GAAIC,cAAMG,QAAS,uBACpB,CAACJ,GAAIC,cAAMG,QAAS,4BACpB,CAACJ,GAAIC,cAAMG,QAAS,QAiBfC,EAAe,SAACC,GAAD,MAA6B,CACrDC,KAAMC,EACNF,mBAGWG,IAlBQ,WAAyE,IAAxEC,EAAuE,uDAA/DZ,EAAca,EAAiD,uCAC3F,OAAQA,EAAOJ,MACX,KAAKC,EACD,OAAO,2BACAE,GADP,IAEIP,SAAS,GAAD,mBAAMO,EAAMP,UAAZ,CAAsB,CAACH,GAAIC,cAAMG,QAASO,EAAOL,oBAEjE,QACI,OAAOI,IAcZ,IAAMF,EAAc,uB,4NChCrBV,EAAe,CACjBc,MAAO,GACPlC,SAAU,GACVmC,gBAAiB,EACjBpC,YAAa,EACbqC,YAAY,EACZC,oBAAqB,IA8CZC,EAAkB,SAACnC,GAAD,MAAqB,CAAC0B,KAAMU,EAAQpC,WACtDqC,EAAoB,SAACrC,GAAD,MAAqB,CAAC0B,KAAMY,EAAUtC,WAK1DuC,EAAmB,SAAC3C,GAAD,MAA0B,CACtD8B,KAAMc,EACN5C,gBAMS6C,EAAqB,SAACR,GAAD,MAA0B,CACxDP,KAAMgB,EACNT,eAESU,EAA8B,SAACV,EAAqBjC,GAAtB,MAA0C,CACjF0B,KAAMkB,EACNX,aACAjC,WAIS6C,EAAiB,SAACC,EAAcjD,GAAf,8CAA+C,WAAMkD,GAAN,eAAAC,EAAA,6DAEzED,EAASN,GAAmB,IAC5BM,EAASR,EAAiBO,IAH+C,SAIlDpD,IAASC,SAASmD,EAAMjD,GAJ0B,OAInEb,EAJmE,OAMzE+D,EAASN,GAAmB,IAC5BM,GA9BuBhB,EA8BH/C,EAASiE,MA9BgC,CAC7DvB,KAAMwB,EACNnB,WA6BAgB,GAvB4BI,EAuBHnE,EAASmE,WAvBkB,CACpDzB,KAAM0B,EACND,gBAayE,iCAf9C,IAACA,EARLpB,IAuBkD,OAA/C,uDAUjBsB,EAAgB,SAACrD,GAAD,8CAA+B,WAAM+C,GAAN,SAAAC,EAAA,6DAExDD,EAASJ,GAA4B,GAAO3C,IAFY,SAGjCY,IAAUE,WAAWd,GAHY,OAIvB,IAJuB,OAI3Cf,KAAKqE,YACdP,EAASZ,EAAgBnC,IAG7B+C,EAASJ,GAA4B,GAAQ3C,IARW,2CAA/B,uDAUhBuD,EAAkB,SAACvD,GAAD,8CAA+B,WAAM+C,GAAN,SAAAC,EAAA,6DAE1DD,EAASJ,GAA4B,GAAO3C,IAFc,SAGnCY,IAAUC,aAAab,GAHY,OAIzB,IAJyB,OAI7Cf,KAAKqE,YACdP,EAASV,EAAkBrC,IAG/B+C,EAASJ,GAA4B,GAAQ3C,IARa,2CAA/B,uDAWhBwD,IAnGM,WAAuE,IAAtE3B,EAAqE,uDAA7DZ,EAAca,EAA+C,uCACvF,OAAQA,EAAOJ,MACX,KAAKU,EACD,OAAO,2BACAP,GADP,IAEIE,MAAOF,EAAME,MAAM0B,KAAI,SAACC,GACpB,OAAIA,EAAEvC,KAAOW,EAAO9B,OACT,2BAAI0D,GAAX,IAAcC,UAAU,IAErBD,OAGnB,KAAKpB,EACD,OAAO,2BACAT,GADP,IAEIE,MAAOF,EAAME,MAAM0B,KAAI,SAACC,GACpB,OAAIA,EAAEvC,KAAOW,EAAO9B,OACT,2BAAI0D,GAAX,IAAcC,UAAU,IAErBD,OAGnB,KAAKR,EACD,OAAO,2BAAIrB,GAAX,IAAkBE,MAAOD,EAAOC,QACpC,KAAKS,EACD,OAAO,2BAAIX,GAAX,IAAkBjC,YAAakC,EAAOlC,cAC1C,KAAKwD,EACD,OAAO,2BAAIvB,GAAX,IAAkBG,gBAAiBF,EAAOqB,aAC9C,KAAKT,EACD,OAAO,2BAAIb,GAAX,IAAkBI,WAAYH,EAAOG,aACzC,KAAKW,EACD,OAAO,2BACAf,GADP,IAEIK,oBAAqBJ,EAAOG,WAAP,sBACXJ,EAAMK,qBADK,CACgBJ,EAAO9B,SACtC6B,EAAMK,oBAAoB0B,QAAO,SAAAzC,GAAE,OAAIA,IAAOW,EAAO9B,YAEnE,QACI,OAAO6B,IAiEnB,IAAMO,EAAS,eACTE,EAAW,iBACXY,EAAY,kBACZV,EAAmB,yBACnBY,EAAkB,wBAClBV,EAAqB,2BACrBE,EAA4B,mC,oBC3HlCiB,EAAOC,QAAU,CAAC,QAAU,2B,oBCD5BD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCC3CD,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,YAAc,mC,qFCAhCD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,WAAa,0B,oBCD/ED,EAAOC,QAAU,IAA0B,oC,yDCC3CD,EAAOC,QAAU,CAAC,SAAW,+BAA+B,UAAY,gCAAgC,YAAc,kCAAkC,MAAQ,4BAA4B,SAAW,iC,sDCOhM,IAAKC,EAAZ,oE,SAAYA,O,qBAAAA,I,kBAAAA,M,KAML,IAAMC,EAA2B,CACvChE,OAAQ,EACRiE,gBAAgB,EAChBC,0BAA2B,GAC3BC,SAAU,GACVC,QAAS,GACTC,SAAU,CACTC,OAAQ,GACRC,GAAI,GACJC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,SAAU,IAEXC,OAAQ,CACPC,MAAO,GACPC,MAAO,M,mBC/BTnB,EAAOC,QAAU,CAAC,QAAU,2BAA2B,OAAS,0BAA0B,SAAW,8B,wCCWjFmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uPCFSC,EARA,SAACC,GACZ,OACI,yBAAKC,UAAWC,IAAOC,QACnB,yBAAKC,IAAKJ,EAAMK,MAAOC,IAAKN,EAAMO,U,yBCY/BC,EAnBH,WACR,OACI,yBAAKP,UAAWC,IAAOO,KACnB,kBAAC,IAAD,CAASC,GAAG,WAAWT,UAAWC,IAAOS,KAChCC,gBAAiBV,IAAOW,YADjC,WAEA,kBAAC,IAAD,CAASH,GAAG,WAAWT,UAAWC,IAAOS,KAChCC,gBAAiBV,IAAOW,YADjC,WAEA,kBAAC,IAAD,CAASH,GAAG,SAAST,UAAWC,IAAOS,KAC9BC,gBAAiBV,IAAOW,YADjC,SAEA,kBAAC,IAAD,CAASH,GAAG,QAAQT,UAAWC,IAAOS,KAC7BC,gBAAiBV,IAAOW,YADjC,QAEA,kBAAC,IAAD,CAASH,GAAG,SAAST,UAAWC,IAAOS,KAC9BC,gBAAiBV,IAAOW,YADjC,SAEA,kBAAC,IAAD,CAASH,GAAG,WAAWT,UAAWC,IAAOS,KAChCC,gBAAiBV,IAAOW,YADjC,a,iBCaGC,EApBA,SAACd,GAEZ,OACI,4BAAQC,UAAWC,IAAOa,QACtB,wBAAId,UAAWC,IAAOK,OAAtB,kBAA4C,uDAG5C,yBAAKN,UAAWC,IAAOc,YAElBhB,EAAMiB,OACD,uCAAajB,EAAMrG,MAAnB,KAA2B,6BAAK,0BAAMuH,QAASlB,EAAM/F,OACfgG,UAAWC,IAAOjG,QADxB,WAGhC,kBAAC,IAAD,CAASgG,UAAWC,IAAOiB,UAAWT,GAAI,UAA1C,Y,+DClBhBhF,EAAe,CACjBjB,OAAQ,KACRb,MAAO,KACPD,MAAO,KACPsH,QAAQ,EACRG,WAAY,MAgBHC,EAAoB,SAAC5G,EAAuBb,EAAsBD,EAAsBsH,GAApE,MAC5B,CAAC9E,KAAMmF,EAAe5H,KAAM,CAACe,SAAQb,QAAOD,QAAOsH,YAC3CM,EAAyB,SAACH,GAAD,MACjC,CAACjF,KAAMqF,EAAyBC,QAAS,CAACL,gBAIlCM,EAAoB,yDAAiB,WAAMlE,GAAN,uBAAAC,EAAA,sEACvBpE,IAAQC,KADe,QACxCG,EADwC,QAEjCsE,aAAeS,IAAiBmD,UAAU,EAC1BlI,EAASC,KAA7BkC,EAD6C,EAC7CA,GAAIjC,EADyC,EACzCA,MAAOC,EADkC,EAClCA,MAChB4D,EAAS6D,EAAkBzF,EAAIhC,EAAOD,GAAO,KAJH,2CAAjB,uDAqBpBiI,EAAkB,yDAAiB,WAAMpE,GAAN,iBAAAC,EAAA,sEACrBjC,IAAYC,gBADS,OACtChC,EADsC,OAEtC2H,EAAa3H,EAASC,KAAKmI,IACjCrE,EAAS+D,EAAuBH,IAHY,2CAAjB,uDAYhBU,EArDK,WAAsE,IAArExF,EAAoE,uDAA5DZ,EAAca,EAA8C,uCACrF,OAAQA,EAAOJ,MACX,KAAKmF,EACD,OAAO,2BAAIhF,GAAUC,EAAO7C,MAChC,KAAK8H,EACD,OAAO,2BAAIlF,GAAUC,EAAOkF,SAChC,QACI,OAAOnF,IAkDNgF,EAAgB,qBAChBE,EAA0B,+BCpDjCO,G,uKAGE,OACI,kBAAC,EAAD,CAAQd,OAAQe,KAAKhC,MAAMiB,OAAQtH,MAAOqI,KAAKhC,MAAMrG,MAC7CM,OAAQ+H,KAAKhC,MAAM/F,a,GALTgI,IAAMC,WAerBC,gBAJS,SAAC7F,GAAD,MAAwC,CAC5D2E,OAAQ3E,EAAM8F,KAAKnB,OACnBtH,MAAO2C,EAAM8F,KAAKzI,SAEkB,CAACM,ODyBjB,yDAAiB,WAAMuD,GAAN,SAAAC,EAAA,sEACdpE,IAAQY,SADM,cAExB8D,aAAeS,IAAiBmD,SACzCnE,EAAS6D,EAAkB,KAAM,KAAM,MAAM,IAHZ,2CAAjB,wDCzBTc,CAA6CJ,ICE7CM,GArBC,WACZ,OACI,yBAAKpC,UAAWC,IAAOoC,SACnB,kBAAC,IAAD,CAAOC,KAAK,WACLC,OAAQ,kBAAM,kBAAC,EAAD,CAAQnC,MAAOoC,IAAYlC,MAAO,eACvD,kBAAC,IAAD,CAAOgC,KAAK,WACLC,OAAQ,kBAAM,kBAAC,EAAD,CAAQnC,MAAOqC,IAAYnC,MAAO,eACvD,kBAAC,IAAD,CAAOgC,KAAK,SACLC,OAAQ,kBAAM,kBAAC,EAAD,CAAQnC,MAAOsC,IAAUpC,MAAO,aACrD,kBAAC,IAAD,CAAOgC,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,EAAD,CAAQnC,MAAOuC,IAASrC,MAAO,YACjE,kBAAC,IAAD,CAAOgC,KAAK,SACLC,OAAQ,kBAAM,kBAAC,EAAD,CAAQnC,MAAOwC,IAAUtC,MAAO,aACrD,kBAAC,IAAD,CAAOgC,KAAK,WACLC,OAAQ,kBAAM,kBAAC,EAAD,CAAQnC,MAAOyC,IAAYvC,MAAO,eAEvD,kBAAC,GAAD,MACA,kBAAC,EAAD,Q,6DCdGwC,GATI,SAAC,GAA0B,IAAzBpC,EAAwB,EAAxBA,KAAMJ,EAAkB,EAAlBA,MACvB,OACI,yBAAKN,UAAWC,KAAO8C,YACnB,uBAAG/C,UAAWC,KAAOS,KAAMsC,KAAMtC,EAAMuC,OAAO,SAC3CC,IAAI,uBAAuB5C,KCG3B6C,GAXK,WAChB,OACI,6BAASnD,UAAWC,KAAOmD,aACvB,kBAAC,GAAD,CAAY1C,KAAM,iDACNJ,MAAM,aAClB,kBAAC,GAAD,CAAYI,KAAM,sCAAuCJ,MAAM,WAC/D,kBAAC,GAAD,CAAYI,KAAM,0BAA2BJ,MAAM,eCGhD+C,GATA,WACX,OACI,yBAAKrD,UAAWC,KAAOqD,QACnB,kBAAC,GAAD,MACA,uBAAGtD,UAAWC,KAAOsD,WAArB,uC,qBCGGC,GARF,WACT,OACI,yBAAKxD,UAAWC,KAAOwD,MACnB,sC,qBCKGC,GARD,WACV,OACI,yBAAK1D,UAAWC,KAAO0D,OACnB,uC,qBCKGC,GARC,WACZ,OACI,yBAAK5D,UAAWC,KAAO4D,SACnB,yC,8ECgBNC,GAAYC,aAAiB,IAuDpBC,gBAAsD,CAEjEC,KAAM,SAFKD,EArD2F,SAAC,GAIO,IAHHE,EAGE,EAHFA,aACA/C,EAEE,EAFFA,WACAgD,EACE,EADFA,MAE3G,OACI,0BAAMnE,UAAWC,KAAOgE,KAAMG,SAAUF,GAEnCC,GAAS,uBAAGnE,UAAWC,KAAOoE,UAAWF,GAGzChD,GAAc,yBAAKhB,IAAKgB,IACxBA,GAAc,kBAACmD,GAAA,EAAD,CACXC,UAAWC,KACXC,SAAU,CAACC,MACX7I,KAAM,UACN8I,YAAa,uBAEjB,yBAAK3E,UAAWC,KAAO2E,SACnB,2BAAOC,QAAQ,eAAf,SACA,kBAACP,GAAA,EAAD,CACIC,UAAWC,KACXC,SAAU,CAACC,KAAUZ,IACrBjI,KAAM,QACN8I,YAAa,WAErB,yBAAK3E,UAAWC,KAAO2E,SACnB,2BAAOC,QAAQ,aAAf,YACA,kBAACP,GAAA,EAAD,CACIC,UAAWO,KACXL,SAAU,CAACC,KAAUZ,IACrBjI,KAAM,WACN8I,YAAa,cAErB,yBAAK3E,UAAWC,KAAO2E,SACnB,kBAACN,GAAA,EAAD,CACIC,UAAW,QACX1I,KAAM,aACNK,KAAK,WACL8D,UAAWC,KAAO8E,gBACtB,2BAAOF,QAAQ,oBAAf,gBAEJ,yBAAK7E,UAAWC,KAAO2E,SACnB,4BACI1I,KAAM,SACN8D,UAAWC,KAAO+E,QAFtB,aC1BVC,GAA+B,CACjCvL,MVFmB,SAACC,EAAeC,EAAkBC,EAAqBC,GAAvD,8CAAsF,WAAMyD,GAAN,iBAAAC,EAAA,sEAClFpE,IAAQM,MAAMC,EAAOC,EAAUC,EAAYC,GADuC,QACnGN,EADmG,QAE5FsE,aAAeS,IAAiBmD,QACzCnE,EAASkE,MAEmB,KAAxBjI,EAASsE,YACTP,EAASoE,KAGP5F,EAAUvC,EAASsC,SAASoJ,OAAS,EAAI1L,EAASsC,SAAS,GAAK,aAEtEyB,EAAS4H,YAAW,QAAS,CAACC,OAAQrJ,MAX+D,2CAAtF,wDUKRmG,gBAXO,SAAC7F,GACnB,MAAO,CACH8E,WAAY9E,EAAM8F,KAAKhB,WACvBH,OAAQ3E,EAAM8F,KAAKnB,UAQaiE,GAAzB/C,EA/BD,SAACnC,GAKX,OAAIA,EAAMiB,OACC,kBAAC,IAAD,CAAUP,GAAI,aAIrB,yBAAKT,UAAWC,KAAOvG,OACnB,qCACA,6BAASsG,UAAWC,KAAOoF,SACvB,kBAAC,GAAD,CAAWlE,WAAYpB,EAAMoB,WAAYiD,SAZpC,SAACrJ,GACdgF,EAAMrG,MAAMqB,EAASpB,MAAOoB,EAASnB,SAAUmB,EAASlB,WAAYkB,EAASjB,iB,QCb/E2B,GAAe,CACjB6J,aAAa,GAwBFC,GArBI,WAAqE,IAApElJ,EAAmE,uDAA3DZ,GAAca,EAA6C,uCACnF,OAAQA,EAAOJ,MACX,KAAKsJ,GACD,OAAO,2BAAInJ,GAAX,IAAkBiJ,aAAa,IACnC,QACI,OAAOjJ,IAoBNmJ,GAAsB,0B,SChB7BC,GAAmBzD,IAAM0D,MAAK,kBAAM,iCACpCC,GAAmB3D,IAAM0D,MAAK,kBAAM,iCACpCE,GAAiB5D,IAAM0D,MAAK,kBAAM,iCAGlCG,G,4MAGFC,wBAA0B,SAAUC,GAChCC,QAAQC,IAAI,sBACZD,QAAQC,IAAIF,I,kEAIZhE,KAAKhC,MAAMmG,gBACXxG,OAAOyG,iBAAiB,qBAAsBpE,KAAK+D,2B,6CAInDpG,OAAO0G,oBAAoB,qBAAsBrE,KAAK+D,2B,+BAItD,OAAK/D,KAAKhC,MAAMuF,YAIZ,yBAAKtF,UAAWC,IAAOoG,KACnB,0BAAMrG,UAAWC,IAAOqG,MACpB,yBAAKtG,UAAWC,IAAOoC,SACnB,kBAAC,GAAD,OAGJ,yBAAKrC,UAAWC,IAAOsG,SACnB,yBAAKvG,UAAWC,IAAOuG,aACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAIjG,GAAG,aAC5B,kBAAC,IAAD,CAAO6B,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,oBACLC,OAAQ,kBAAM,kBAAC,WAAD,CAAUoE,SACpB,kBAACC,GAAA,EAAD,OAAc,kBAACjB,GAAD,UACzB,kBAAC,IAAD,CAAOrD,KAAK,WACLC,OAAQ,kBAAM,kBAAC,WAAD,CAAUoE,SACpB,kBAACC,GAAA,EAAD,OAAc,kBAACnB,GAAD,UACzB,kBAAC,IAAD,CAAOnD,KAAK,SACLC,OAAQ,kBAAM,kBAAC,WAAD,CAAUoE,SACpB,kBAACC,GAAA,EAAD,OAAc,kBAAChB,GAAD,UACzB,kBAAC,IAAD,CAAOtD,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,GAAD,SAClC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,GAAD,SACrC,kBAAC,IAAD,CAAOD,KAAK,IAAIC,OAAQ,kBAAM,mDAGtC,yBAAKvC,UAAWC,IAAOqD,QACnB,kBAAC,GAAD,UA9BT,kBAACsD,GAAA,EAAD,U,GAnBD5E,IAAMC,WA8DT4E,sBACXC,IACA5E,aANoB,SAAC7F,GAAD,MAAwC,CAC5DiJ,YAAajJ,EAAMgK,IAAIf,eAK8C,CAACY,cD/D3C,yDAAiB,WAAM3I,GAAN,eAAAC,EAAA,6DACxCuJ,EAAUxJ,EAASkE,KADqB,SAEtCuF,QAAQC,IAAI,CAACF,IAFyB,OAG5CxJ,EAPuC,CAACrB,KAAMsJ,KAIF,2CAAjB,yDC6DhBqB,CAE6FhB,I,2DC3EtGqB,GAAWC,2BAAgB,CAC7BC,YAAaC,KACbC,aAAclL,KACdmL,UAAWvJ,KACXmE,KAAMN,EACNoC,KAAMuD,KACNnB,IAAKd,KAGHkC,GAAQC,uBAAYR,GAAUS,+BAAoBC,2BAAgBC,QAUzDJ,MAIf/H,OAAO+H,MAAQA,GCvBfK,IAASvF,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUkF,MAAOA,IACb,kBAAC,GAAD,QAGRM,SAASC,eAAe,SlB2HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5O,MAAK,SAAA6O,GACJA,EAAaC,gBAEdC,OAAM,SAAAnE,GACL6B,QAAQ7B,MAAMA,EAAMpI,a,mBmBhJ5BsC,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,QAAU,qBAAqB,QAAU,qBAAqB,YAAc,yBAAyB,OAAS,sB,mBCAhLD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,WAAa,2BAA2B,UAAY,0BAA0B,OAAS,yB,gCCDvK,oEAAO,IAAMoG,EAAW,SAAC6D,GACxB,IAAIA,EACJ,MAAO,qBAGKxE,EAAmB,SAACD,GAAD,OAAuB,SAACyE,GACvD,GAAIA,EAAMrD,OAASpB,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,gCCN/B,uDAYe8C,IARG,WACd,OACI,yBAAK5G,UAAWC,IAAOuI,SACnB,yBAAKrI,IAAKsI,IAAWzI,UAAWC,IAAOyI,IAAKrI,IAAI,c,gCCP5D,2IAIasI,EAAqB,SAAC5I,GAC/B,IAAM6I,EAAW7I,EAAM8I,KAAKC,SAAW/I,EAAM8I,KAAK1E,MAClD,OACI,yBAAKnE,UAAWC,IAAO8I,YAAc,KAAOH,EAAW3I,IAAOkE,MAAQ,KAClE,8CAAcpE,EAAMiJ,MAApB,CAA2BhJ,UAAWC,IAAOgJ,YAC5CL,GAAY,0BAAM5I,UAAWC,IAAOoE,UAAWtE,EAAM8I,KAAK1E,SAK1DK,EAAkB,SAACzE,GAC5B,IAAM6I,EAAW7I,EAAM8I,KAAKC,SAAW/I,EAAM8I,KAAK1E,MAClD,OACI,yBAAKnE,UAAWC,IAAO8I,YAAc,KAAOH,EAAW3I,IAAOkE,MAAQ,KAClE,2CAAWpE,EAAMiJ,MAAjB,CAAwBhJ,UAAWC,IAAOiJ,aACzCN,GAAY,0BAAM5I,UAAWC,IAAOoE,UAAWtE,EAAM8I,KAAK1E,SAK1DW,EAAqB,SAAC/E,GAC/B,IAAM6I,EAAW7I,EAAM8I,KAAKC,SAAW/I,EAAM8I,KAAK1E,MAClD,OACI,yBAAKnE,UAAWC,IAAO8I,YAAc,KAAOH,EAAW3I,IAAOkE,MAAQ,KAClE,2CAAWpE,EAAMiJ,MAAjB,CAAwBhJ,UAAWC,IAAOiJ,UAAWhN,KAAM,cAC1D0M,GAAY,0BAAM5I,UAAWC,IAAOoE,UAAWtE,EAAM8I,KAAK1E,U,mBC5BvE9F,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,QAAU,yB,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,IAAM,yB,uTCMvD7C,EAAe,CACjB0N,MAAO,CACH,CAACxN,GAAIC,cAAMG,QAAS,yBAA0BqN,aAAc,IAC5D,CAACzN,GAAIC,cAAMG,QAAS,uBAAwBqN,aAAc,KAE9DjO,QAASqD,IACT7D,OAAQ,IAgCC0O,EAAY,SAACC,GAAD,MAA0B,CAACpN,KAAMqN,EAAUD,gBAKvDE,EAAc,SAAC7O,GAAD,MAAqB,CAACuB,KAAMuN,EAAY9O,WAKtD+O,EAAmB,SAAClP,GAAD,8CAA+B,WAAM+C,GAAN,eAAAC,EAAA,sEACpClD,IAAWC,QAAQC,GADiB,OACrDhB,EADqD,OAE3D+D,GAX6BpC,EAWH3B,EAASC,KAXoB,CACvDyC,KAAMyN,EACNxO,aAO2D,iCAT/B,IAACA,IAS8B,OAA/B,uDAInByO,EAAkB,SAACpP,GAAD,8CAA+B,WAAM+C,GAAN,eAAAC,EAAA,sEACnClD,IAAWG,UAAUD,GADc,OACpDhB,EADoD,OAE1D+D,EAASiM,EAAYhQ,EAASC,OAF4B,2CAA/B,uDAIlBoQ,EAAiB,SAAClP,GAAD,8CAA+B,WAAM4C,GAAN,SAAAC,EAAA,+EAE9BlD,IAAWI,aAAaC,GAFM,cAGxClB,KAAKqE,aAAeS,IAAiBmD,SAC9CnE,EAASiM,EAAY7O,IAJ4B,gDAQrDqL,QAAQC,IAAR,MARqD,yDAA/B,uDAWjB6D,EAAc,SAAChP,GAAD,8CAA2B,WAAMyC,GAAN,eAAAC,EAAA,sEAC3BlD,IAAWO,UAAUC,GADM,QAC5CtB,EAD4C,QAErCC,KAAKqE,aAAeS,IAAiBmD,SAC9CnE,GA1BoB+B,EA0BC9F,EAASC,KAAK6F,OA1BS,CAACpD,KAAM6N,EAAYzK,YAuBjB,iCAvB3B,IAACA,IAuB0B,OAA3B,uDAMd0K,EAAgB,SAAC7O,GAAD,8CAAqC,WAAOoC,EAAU0M,GAAjB,mBAAAzM,EAAA,sEACvClD,IAAWY,YAAYC,GADgB,UACxD3B,EADwD,OAExDgB,EAASyP,IAAW9H,KAAK3H,OAC3BhB,EAASC,KAAKqE,aAAeS,IAAiBmD,QAHY,gBAItDlH,GACA+C,EAASmM,EAAiBlP,IAL4B,8BAStDuB,EAAUvC,EAASC,KAAKqC,SAASoJ,OAAS,EAAI1L,EAASC,KAAKqC,SAAS,GAAK,aAE9EyB,EAAS4H,YAAW,eAAgB,CAACC,OAAQrJ,KAXa,kBAYnDiL,QAAQkD,OAAOnO,IAZoC,4CAArC,yDAgBdsL,IAhFQ,WAAyE,IAAxEhL,EAAuE,uDAA/DZ,EAAca,EAAiD,uCAC3F,OAAQA,EAAOJ,MACX,KAAKqN,EACD,IAAIY,EAAU,CAACxO,GAAIC,cAAMG,QAASO,EAAOgN,YAAaF,aAAc,GACpE,OAAO,2BACA/M,GADP,IAEI8M,MAAM,CAAEgB,GAAH,mBAAe9N,EAAM8M,UAElC,KAAKQ,EACD,OAAO,2BACAtN,GADP,IAEIlB,QAASmB,EAAOnB,UAExB,KAAKsO,EACD,OAAO,2BACApN,GADP,IAEI1B,OAAQ2B,EAAO3B,SAEvB,KAAKoP,EACD,OAAO,2BACA1N,GADP,IAEIlB,QAAQ,2BAAKkB,EAAMlB,SAAZ,IAAqBmE,OAAQhD,EAAOgD,WAEnD,QACI,OAAOjD,IA4DZ,IAAMkN,EAAW,mBACXI,EAAmB,2BACnBF,EAAa,qBACbM,EAAa,uB","file":"static/js/main.5942593d.chunk.js","sourcesContent":["import axios from 'axios';\nimport {ProfileType} from '../types/types';\n\n// axios general settings, axios params -> baseUrl and config\n// instance makes auto concat for baseUrl and anothers axios config\nconst instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\n    withCredentials: true,\n    headers: {\n        'API-KEY': '7e5b4528-2880-4677-b629-b878b7697787'\n    }\n})\n\nexport const authAPI = {\n    me() {\n        return instance.get(`/auth/me`)\n            .then(response => response.data)\n    },\n\n    login(email: string, password: string, rememberMe: boolean = false, captcha: string | null = null) {\n        return instance.post(`/auth/login`, {email, password, rememberMe, captcha})\n            .then(response => response.data)\n    },\n\n    logout() {\n        return instance.delete(`/auth/login`)\n            .then(response => response.data)\n    }\n}\n\nexport const usersAPI = {\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\n        return instance.get(`/users?page=${currentPage}&count=${pageSize}&sortOrder=asc`)\n            .then(response => response.data)\n    }\n\n}\n\nexport const profileAPI = {\n    getUser(userId: string) {\n        return instance.get(`/profile/${userId}`)\n    },\n\n    getStatus(userId: string) {\n        return instance.get(`/profile/status/${userId}`)\n    },\n\n    updateStatus(status: string) {\n        return instance.put(`/profile/status`, {status})\n    },\n\n    savePhoto(file: File) {\n        let formData = new FormData()\n        formData.append('image', file)\n        return instance.put(`/profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n            .then(response => response.data)\n    },\n\n    saveProfile(profile: ProfileType) {\n        return instance.put(`/profile`, profile)\n    }\n}\n\nexport const followAPI = {\n\n    unfollowUser(userId: string) {\n        return instance.delete(`/follow/${userId}`)\n    },\n\n    followUser(userId: string) {\n        return instance.post(`/follow/${userId}`)\n    }\n\n}\n\nexport const securityAPI = {\n\n    getCaptchaUrl() {\n        return instance.get('/security/get-captcha-url')\n    }\n\n}\n\n\n\n\n\n","import {v1} from 'uuid';\n\nconst initialState = {\n    dialogs: [\n        {id: v1(), name: 'Jack'},\n        {id: v1(), name: 'Nick'},\n        {id: v1(), name: 'Alex'},\n    ],\n    messages: [\n        {id: v1(), message: 'Hi! How are you?'},\n        {id: v1(), message: 'I am fine! And you?'},\n        {id: v1(), message: 'Me too. Have a nice day!'},\n        {id: v1(), message: ':)'},\n    ]\n}\n\nconst dialogsReducer = (state = initialState, action: DialogsActionsType): InitialStateType => {\n    switch (action.type) {\n        case ADD_MESSAGE:\n            return {\n                ...state,\n                messages: [...state.messages, {id: v1(), message: action.newMessageBody}]\n            }\n        default:\n            return state\n    }\n}\n\n//Action\nexport const addMessageAC = (newMessageBody: string) => ({\n    type: ADD_MESSAGE,\n    newMessageBody\n} as const)\n\nexport default dialogsReducer;\n\n\n//Types\nexport const ADD_MESSAGE = 'dialogs/ADD_MESSAGE';\n\ntype InitialStateType = typeof initialState;\nexport type DialogsActionsType = ReturnType<typeof addMessageAC>;","import {followAPI, usersAPI} from '../api/api';\nimport {Dispatch} from 'redux';\nimport {UsersStructureType} from '../types/types';\nimport {ThunkType} from './redux-store';\n\n\nconst initialState = {\n    users: [] as Array<UsersStructureType>,\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [] as Array<number>\n}\n\nconst usersReducer = (state = initialState, action: UsersActionsType): InitialStateType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map((u: UsersStructureType) => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map((u: UsersStructureType) => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n        case SET_USERS:\n            return {...state, users: action.users}\n        case SET_CURRENT_PAGE:\n            return {...state, currentPage: action.currentPage}\n        case SET_TOTAL_COUNT:\n            return {...state, totalUsersCount: action.totalCount}\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching}\n        case TOGGLE_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        default:\n            return state\n    }\n}\n\n//Action\nexport const followSuccessAC = (userId: string) => ({type: FOLLOW, userId} as const)\nexport const unFollowSuccessAC = (userId: string) => ({type: UNFOLLOW, userId} as const)\nexport const setUsersAC = (users: Array<UsersStructureType>) => ({\n    type: SET_USERS,\n    users\n} as const)\nexport const setCurrentPageAC = (currentPage: number) => ({\n    type: SET_CURRENT_PAGE,\n    currentPage\n} as const)\nexport const setTotalCountAC = (totalCount: number) => ({\n    type: SET_TOTAL_COUNT,\n    totalCount\n} as const)\nexport const toggleIsFetchingAC = (isFetching: boolean) => ({\n    type: TOGGLE_IS_FETCHING,\n    isFetching\n} as const)\nexport const toggleFollowingInProgressAC = (isFetching: boolean, userId: number) => ({\n    type: TOGGLE_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n} as const)\n\n//Thunk\nexport const requestUsersTC = (page: number, pageSize: number): ThunkType => async dispatch => {\n    // show preloader\n    dispatch(toggleIsFetchingAC(true))\n    dispatch(setCurrentPageAC(page))\n    const response = await usersAPI.getUsers(page, pageSize)\n    // hide preloader\n    dispatch(toggleIsFetchingAC(false))\n    dispatch(setUsersAC(response.items))\n    dispatch(setTotalCountAC(response.totalCount))\n}\nexport const followUsersTC = (userId: string): ThunkType => async dispatch => {\n    // disable btn during server response\n    dispatch(toggleFollowingInProgressAC(true, +userId))\n    const response = await followAPI.followUser(userId)\n    if (response.data.resultCode === 0) {\n        dispatch(followSuccessAC(userId))\n    }\n    // activate btn after server response\n    dispatch(toggleFollowingInProgressAC(false, +userId))\n}\nexport const unfollowUsersTC = (userId: string): ThunkType => async dispatch => {\n    // disable btn during server response\n    dispatch(toggleFollowingInProgressAC(true, +userId))\n    const response = await followAPI.unfollowUser(userId)\n    if (response.data.resultCode === 0) {\n        dispatch(unFollowSuccessAC(userId))\n    }\n    // activate btn after server response\n    dispatch(toggleFollowingInProgressAC(false, +userId))\n}\n\nexport default usersReducer;\n\n\n//Types\nconst FOLLOW = 'users/FOLLOW'\nconst UNFOLLOW = 'users/UNFOLLOW'\nconst SET_USERS = 'users/SET_USERS'\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE'\nconst SET_TOTAL_COUNT = 'users/SET_TOTAL_COUNT'\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING'\nconst TOGGLE_FOLLOWING_PROGRESS = 'users/TOGGLE_FOLLOWING_PROGRESS'\n\ntype InitialStateType = typeof initialState;\nexport type UsersActionsType =\n    ReturnType<typeof followSuccessAC> |\n    ReturnType<typeof unFollowSuccessAC> |\n    ReturnType<typeof setUsersAC> |\n    ReturnType<typeof setCurrentPageAC> |\n    ReturnType<typeof setTotalCountAC> |\n    ReturnType<typeof toggleIsFetchingAC> |\n    ReturnType<typeof toggleFollowingInProgressAC>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__1oiXV\"};","module.exports = __webpack_public_path__ + \"static/media/profile.6be79ee3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dialogs.6fe6dff8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/users.9a90444d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/news.de3167ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/music.3e4441df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/friends.50d16565.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Banner_banner__1ox2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialLinks\":\"SocialLinks_socialLinks__38whE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3C39h\",\"link\":\"Nav_link__2qWFD\",\"activeLink\":\"Nav_activeLink__394vJ\"};","module.exports = __webpack_public_path__ + \"static/media/loader.5613c226.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"FormControls_textarea__2XnMZ\",\"inputText\":\"FormControls_inputText__Jsp5o\",\"formControl\":\"FormControls_formControl__1_tJx\",\"error\":\"FormControls_error__jcdfe\",\"errorMsg\":\"FormControls_errorMsg__1A9DO\"};","import {PostType} from '../components/Profile/MyPosts/MyPosts';\n\nexport type MapDispatchToPropsPostsType = (\n\t\targs: {\n\t\t\ttype: string;\n\t\t\tnewText?: string;\n\t\t}) => void\n\nexport enum ResultCodeStatus {\n\t'success' = 0,\n\t'error' = 1\n}\n\n//ProfileTypes\nexport const userProfile: ProfileType = {\n\tuserId: 1,\n\tlookingForAJob: false,\n\tlookingForAJobDescription: '',\n\tfullName: '',\n\taboutMe: '',\n\tcontacts: {\n\t\tgithub: '',\n\t\tvk: '',\n\t\tfacebook: '',\n\t\tinstagram: '',\n\t\ttwitter: '',\n\t\twebsite: '',\n\t\tyoutube: '',\n\t\tmainLink: ''\n\t},\n\tphotos: {\n\t\tsmall: '',\n\t\tlarge: ''\n\t}\n}\n\nexport type ProfileType = {\n\tuserId: number\n\taboutMe: string\n\tlookingForAJob: boolean\n\tlookingForAJobDescription: null | string\n\tfullName: string\n\tcontacts: ProfileContactsType\n\tphotos: PhotosType\n}\n\nexport type PhotosType = {\n\tsmall: null | string\n\tlarge: null | string\n}\n\nexport type ProfileContactsType = {\n\tgithub: null | string\n\tvk: null | string\n\tfacebook: null | string\n\tinstagram: null | string\n\ttwitter: null | string\n\twebsite: null | string\n\tyoutube: null | string\n\tmainLink: null | string\n}\n\nexport type ProfilePageType = {\n\tposts: Array<PostType>\n\tprofile: ProfileType\n\tstatus: string\n}\n\n//UsersTypes\nexport type UsersPageType = {\n\tusers: Array<UsersStructureType>\n\tpageSize: number\n\ttotalUsersCount: number\n\tcurrentPage: number\n\tisFetching: boolean\n\tfollowingInProgress: Array<number>\n}\n\nexport type UsersStructureType = {\n\tname: string\n\tid: string\n\tphotos: {\n\t\tsmall?: string\n\t\tlarge?: string\n\t}\n\tfollowed: boolean\n\tstatus: string\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"LoginForm_formRow__run0D\",\"button\":\"LoginForm_button__3uNqO\",\"errorMsg\":\"LoginForm_errorMsg__1OYMz\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport styles from './Banner.module.css';\n\ntype BannerType = {\n    title?: string\n    image: string\n}\n\nconst Banner = (props: BannerType) => {\n    return (\n        <div className={styles.banner}>\n            <img src={props.image} alt={props.title}/>\n        </div>\n    )\n}\n\nexport default Banner;","import React from 'react';\nimport styles from './Nav.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst Nav = () => {\n    return (\n        <nav className={styles.nav}>\n            <NavLink to=\"/profile\" className={styles.link}\n                     activeClassName={styles.activeLink}>Profile</NavLink>\n            <NavLink to=\"/dialogs\" className={styles.link}\n                     activeClassName={styles.activeLink}>Dialogs</NavLink>\n            <NavLink to=\"/users\" className={styles.link}\n                     activeClassName={styles.activeLink}>Users</NavLink>\n            <NavLink to=\"/news\" className={styles.link}\n                     activeClassName={styles.activeLink}>News</NavLink>\n            <NavLink to=\"/music\" className={styles.link}\n                     activeClassName={styles.activeLink}>Music</NavLink>\n            <NavLink to=\"/friends\" className={styles.link}\n                     activeClassName={styles.activeLink}>Friends</NavLink>\n        </nav>\n    )\n}\n\nexport default Nav;","import React from 'react';\nimport styles from './Header.module.css';\nimport {NavLink} from 'react-router-dom';\n\nexport type HeaderPropsType = {\n    isAuth: boolean\n    login: any\n    logout: any\n}\n\nconst Header = (props: HeaderPropsType) => {\n\n    return (\n        <header className={styles.header}>\n            <h3 className={styles.title}>Social Network <span>by Andrei Yantsevich</span>\n            </h3>\n\n            <div className={styles.loginBlock}>\n\n                {props.isAuth\n                    ? <div>Hello, {props.login}! <br/><span onClick={props.logout}\n                                                            className={styles.logout}>Logout</span>\n                    </div>\n                    : <NavLink className={styles.loginLink} to={'/login'}>Login</NavLink>}\n\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import {authAPI, securityAPI} from '../api/api';\nimport {ResultCodeStatus} from '../types/types';\nimport {ThunkType} from './redux-store';\nimport {stopSubmit} from 'redux-form';\n\nconst initialState = {\n    userId: null as string | null,\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false,\n    captchaUrl: null as string | null\n}\n\nconst authReducer = (state = initialState, action: AuthActionsType): InitialStateType => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {...state, ...action.data}\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {...state, ...action.payload}\n        default:\n            return state\n    }\n}\n\n\n//Action\nexport const setAuthUserDataAC = (userId: null | string, email: null | string, login: null | string, isAuth: boolean) =>\n    ({type: SET_USER_DATA, data: {userId, email, login, isAuth}} as const)\nexport const getCaptchaUrlSuccessAC = (captchaUrl: string) =>\n    ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}} as const)\n\n\n// Thunk\nexport const getAuthUserDataTC = (): ThunkType => async dispatch => {\n    const response = await authAPI.me()\n    if (response.resultCode === ResultCodeStatus.success) {\n        let {id, login, email} = response.data\n        dispatch(setAuthUserDataAC(id, email, login, true))\n    }\n}\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async dispatch => {\n    const response = await authAPI.login(email, password, rememberMe, captcha)\n    if (response.resultCode === ResultCodeStatus.success) {\n        dispatch(getAuthUserDataTC())\n    } else {\n        if (response.resultCode === 10) {\n            dispatch(getCaptchaUrlTC())\n        }\n        // get error message from server\n        const message = response.messages.length > 0 ? response.messages[0] : 'Some Error'\n        // stop form submit if fields are wrong\n        dispatch(stopSubmit('login', {_error: message}))\n    }\n}\nexport const getCaptchaUrlTC = (): ThunkType => async dispatch => {\n    const response = await securityAPI.getCaptchaUrl()\n    const captchaUrl = response.data.url\n    dispatch(getCaptchaUrlSuccessAC(captchaUrl))\n}\nexport const logoutTC = (): ThunkType => async dispatch => {\n    const response = await authAPI.logout()\n    if (response.resultCode === ResultCodeStatus.success) {\n        dispatch(setAuthUserDataAC(null, null, null, false))\n    }\n}\n\nexport default authReducer;\n\n\n// Types\nexport const SET_USER_DATA = 'auth/SET_USER_DATA';\nexport const GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\n\ntype InitialStateType = typeof initialState;\nexport type AuthActionsType =\n    ReturnType<typeof setAuthUserDataAC> |\n    ReturnType<typeof getCaptchaUrlSuccessAC>\n\n\n","import React from 'react';\nimport Header from './Header';\nimport {connect} from 'react-redux';\nimport {AppRootStateType} from '../../redux/redux-store';\nimport {logoutTC} from '../../redux/authReducer';\n\n\ntype MSTPType = {\n    isAuth: boolean\n    login: string | null\n}\n\ntype MDTPType = {\n    logout: () => void\n}\n\nexport type UserAuthOwnPropsType = MSTPType & MDTPType\n\n\nclass HeaderContainer extends React.Component<UserAuthOwnPropsType> {\n\n    render() {\n        return (\n            <Header isAuth={this.props.isAuth} login={this.props.login}\n                    logout={this.props.logout}/>\n        )\n    }\n}\n\n\nconst MapStateToProps = (state: AppRootStateType): MSTPType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n})\nexport default connect(MapStateToProps, {logout: logoutTC})(HeaderContainer);","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport styles from './Sidebar.module.css';\n\nimport profileImg from '../../assets/images/profile.jpg';\nimport dialogsImg from '../../assets/images/dialogs.jpg';\nimport usersImg from '../../assets/images/users.jpg';\nimport newsImg from '../../assets/images/news.jpg';\nimport musicImg from '../../assets/images/music.jpg';\nimport friendsImg from '../../assets/images/friends.jpg';\n\nimport Banner from './Banner/Banner';\nimport Nav from './Nav/Nav';\nimport HeaderContainer from '../Header/HeaderContainer';\n\nconst Sidebar = () => {\n    return (\n        <div className={styles.sidebar}>\n            <Route path=\"/profile\"\n                   render={() => <Banner image={profileImg} title={'Profile'}/>}/>\n            <Route path=\"/dialogs\"\n                   render={() => <Banner image={dialogsImg} title={'Dialogs'}/>}/>\n            <Route path=\"/users\"\n                   render={() => <Banner image={usersImg} title={'Users'}/>}/>\n            <Route path=\"/news\" render={() => <Banner image={newsImg} title={'News'}/>}/>\n            <Route path=\"/music\"\n                   render={() => <Banner image={musicImg} title={'Music'}/>}/>\n            <Route path=\"/friends\"\n                   render={() => <Banner image={friendsImg} title={'Friends'}/>}/>\n\n            <HeaderContainer/>\n            <Nav/>\n        </div>\n    )\n}\n\nexport default Sidebar;","import React from 'react';\nimport styles from './SocialLink.module.css';\n\ntype Props = {\n    link: string,\n    title: string\n}\n\nconst SocialLink = ({link, title}: Props) => {\n    return (\n        <div className={styles.socialLink}>\n            <a className={styles.link} href={link} target=\"_blank\"\n               rel=\"noopener noreferrer\">{title}</a>\n        </div>\n    )\n}\n\nexport default SocialLink;","import React from 'react';\nimport styles from './SocialLinks.module.css';\nimport SocialLink from './SocialLink/SocialLink';\n\nconst SocialLinks = () => {\n    return (\n        <section className={styles.socialLinks}>\n            <SocialLink link={'https://www.linkedin.com/in/andrei-yantsevich/'}\n                        title=\"LinkedIn\"/>\n            <SocialLink link={'https://github.com/AndreiYantsevich'} title=\"Github\"/>\n            <SocialLink link={'https://t.me/yantsev1ch'} title=\"Telegram\"/>\n        </section>\n    )\n}\n\nexport default SocialLinks;","import React from 'react';\nimport styles from './Footer.module.css';\nimport SocialLinks from './SocialLinks/SocialLinks';\n\nconst Footer = () => {\n    return (\n        <div className={styles.footer}>\n            <SocialLinks/>\n            <p className={styles.copyright}>© Created by Andrei Yantsevich</p>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport styles from './News.module.css';\n\nconst News = () => {\n    return (\n        <div className={styles.news}>\n            <h1>News</h1>\n        </div>\n    )\n}\n\nexport default News;","import React from 'react';\nimport styles from './Music.module.css';\n\nconst Music = () => {\n    return (\n        <div className={styles.music}>\n            <h1>Music</h1>\n        </div>\n    )\n}\n\nexport default Music;","import React from 'react';\nimport styles from './Friends.module.css';\n\nconst Friends = () => {\n    return (\n        <div className={styles.friends}>\n            <h1>Friends</h1>\n        </div>\n    )\n}\n\nexport default Friends;","import React from 'react';\nimport styles from './LoginForm.module.css';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\nimport {Input, InputPsw} from '../../common/FormControls/FormControls';\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\n\nexport type LoginFormDataType = {\n    email: string\n    password: string\n    rememberMe: boolean\n    captcha: string\n}\n\ntype OwnPropsType = {\n    captchaUrl: string | null\n}\n\ntype ErrorType = {\n    error: string\n}\n\n// validate field max length\nconst maxLength = maxLengthCreator(30)\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormDataType, OwnPropsType, ErrorType> & OwnPropsType> = ({\n                                                                                                               handleSubmit,\n                                                                                                               captchaUrl,\n                                                                                                               error\n                                                                                                           }) => {\n    return (\n        <form className={styles.form} onSubmit={handleSubmit}>\n            {/*Show error message if exists*/}\n            {error && <p className={styles.errorMsg}>{error}</p>}\n\n            {/*CAPTCHA*/}\n            {captchaUrl && <img src={captchaUrl}/>}\n            {captchaUrl && <Field\n                component={Input}\n                validate={[required]}\n                name={'captcha'}\n                placeholder={'Symbols from image'}/>}\n\n            <div className={styles.formRow}>\n                <label htmlFor=\"login_login\">Login</label>\n                <Field\n                    component={Input}\n                    validate={[required, maxLength]}\n                    name={'email'}\n                    placeholder={'email'}/>\n            </div>\n            <div className={styles.formRow}>\n                <label htmlFor=\"login_psw\">Password</label>\n                <Field\n                    component={InputPsw}\n                    validate={[required, maxLength]}\n                    name={'password'}\n                    placeholder={'Password'}/>\n            </div>\n            <div className={styles.formRow}>\n                <Field\n                    component={'input'}\n                    name={'rememberMe'}\n                    type=\"checkbox\"\n                    className={styles.inputCheckbox}/>\n                <label htmlFor=\"login_rememberMe\">Remember me</label>\n            </div>\n            <div className={styles.formRow}>\n                <button\n                    type={'submit'}\n                    className={styles.button}>Send\n                </button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default reduxForm<LoginFormDataType, OwnPropsType, ErrorType>({\n    // a unique name for the form\n    form: 'login'\n})(LoginForm)","import React from 'react';\nimport styles from './Login.module.css';\nimport LoginForm, {LoginFormDataType} from './LoginForm/LoginForm';\nimport {connect} from 'react-redux';\nimport {loginTC} from '../../redux/authReducer';\nimport {Redirect} from 'react-router-dom';\nimport {AppRootStateType} from '../../redux/redux-store';\n\nexport type MDTPType = {\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\n}\n\nexport type MSTPType = ReturnType<typeof mapStateToProps>\n\nconst Login = (props: MDTPType & MSTPType) => {\n    const onSubmit = (formData: LoginFormDataType) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return (\n        <div className={styles.login}>\n            <h1>Login</h1>\n            <section className={styles.section}>\n                <LoginForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\n            </section>\n        </div>\n    )\n}\n\n\nlet mapStateToProps = (state: AppRootStateType) => {\n    return {\n        captchaUrl: state.auth.captchaUrl,\n        isAuth: state.auth.isAuth\n    }\n}\n\nconst MapDispatchToProps: MDTPType = {\n    login: loginTC\n}\n\nexport default connect(mapStateToProps, MapDispatchToProps)(Login)","import {getAuthUserDataTC} from './authReducer';\nimport {ThunkType} from './redux-store';\n\nconst initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action: AppActionsType): InitialStateType => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {...state, initialized: true}\n        default:\n            return state\n    }\n}\n\n\n//Action\nexport const initializedSuccessAC = () => ({type: INITIALIZED_SUCCESS} as const)\n\n\n//Thunk\nexport const initializeAppTC = (): ThunkType => async dispatch => {\n    let promise = dispatch(getAuthUserDataTC())\n    await Promise.all([promise])\n    dispatch(initializedSuccessAC())\n}\n\nexport default appReducer;\n\n\n//Types\nexport const INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\ntype InitialStateType = typeof initialState;\nexport type AppActionsType = ReturnType<typeof initializedSuccessAC>;","import React, {Suspense} from 'react';\nimport styles from './App.module.css';\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router';\nimport Sidebar from '../Sidebar/Sidebar';\nimport Footer from '../Footer/Footer';\nimport News from '../News/News';\nimport Music from '../Music/Music';\nimport Friends from '../Friends/Friends';\nimport Login from '../Login/Login';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {initializeAppTC} from '../../redux/appReducer';\nimport {AppRootStateType} from '../../redux/redux-store';\nimport Preloader from '../common/Preloader/Preloader';\n\nconst DialogsContainer = React.lazy(() => import('../Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('../Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('../Users/UsersContainer'));\n\n\nclass App extends React.Component<OwnPropsType> {\n\n    // catch all server errors\n    catchAllUnhandledErrors = function (promiseRejectionEvent: Event) {\n        console.log('Some error occured')\n        console.log(promiseRejectionEvent)\n    }\n\n    componentDidMount() {\n        this.props.initializeApp()\n        window.addEventListener('unhandlesrejection', this.catchAllUnhandledErrors)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandlesrejection', this.catchAllUnhandledErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className={styles.app}>\n                <main className={styles.main}>\n                    <div className={styles.sidebar}>\n                        <Sidebar/>\n                    </div>\n\n                    <div className={styles.content}>\n                        <div className={styles.contentMain}>\n                            <Switch>\n                                <Redirect exact from=\"/\" to=\"/profile\" />\n                                <Route path=\"/login\" render={() => <Login/>}/>\n                                <Route path=\"/profile/:userId?\"\n                                       render={() => <Suspense fallback={\n                                           <Preloader/>}><ProfileContainer/></Suspense>}/>\n                                <Route path=\"/dialogs\"\n                                       render={() => <Suspense fallback={\n                                           <Preloader/>}><DialogsContainer/></Suspense>}/>\n                                <Route path=\"/users\"\n                                       render={() => <Suspense fallback={\n                                           <Preloader/>}><UsersContainer/></Suspense>}/>\n                                <Route path=\"/news\" render={() => <News/>}/>\n                                <Route path=\"/music\" render={() => <Music/>}/>\n                                <Route path=\"/friends\" render={() => <Friends/>}/>\n                                <Route path=\"*\" render={() => <div>404 NOT FOUND</div>}/>\n                            </Switch>\n                        </div>\n                        <div className={styles.footer}>\n                            <Footer/>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nconst MapStateToProps = (state: AppRootStateType): MSTPType => ({\n    initialized: state.app.initialized\n})\n\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect<MSTPType, MDTPType, null, AppRootStateType>(MapStateToProps, {initializeApp: initializeAppTC}))(App)\n\n\n// TYPES\ntype MDTPType = {\n    initializeApp: () => void\n}\n\ntype MSTPType = {\n    initialized: boolean\n}\n\ntype AppPropsType = MDTPType & MSTPType\n\ntype PathParamsType = {}\n\ntype OwnPropsType = RouteComponentProps<PathParamsType> & AppPropsType\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport profileReducer, {ProfileActionsType} from './profileReducer';\nimport dialogsReducer, {DialogsActionsType} from './dialogsReducer';\nimport usersReducer, {UsersActionsType} from './usersReducer';\nimport appReducer, {AppActionsType} from './appReducer';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form'\nimport authReducer, {AuthActionsType} from './authReducer';\n\nconst reducers = combineReducers({\n    profilePage: profileReducer,\n    messagesPage: dialogsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nexport type AppRootStateType = ReturnType<typeof reducers>;\nexport type AppRootActionsType =\n    AppActionsType |\n    AuthActionsType |\n    DialogsActionsType |\n    ProfileActionsType |\n    UsersActionsType\nexport type ThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppRootActionsType>;\nexport default store;\n\n// dev debugger store\n// @ts-ignore\nwindow.store = store;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport store from './redux/redux-store';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1Je8e\",\"main\":\"App_main__2Bb2U\",\"sidebar\":\"App_sidebar__2aZqf\",\"content\":\"App_content__2C8oy\",\"contentMain\":\"App_contentMain__3n_89\",\"footer\":\"App_footer__cC4pk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3N5LP\",\"title\":\"Header_title__2MH6S\",\"loginBlock\":\"Header_loginBlock__1_lba\",\"loginLink\":\"Header_loginLink__16unK\",\"logout\":\"Header_logout__Y-sqo\"};","export const required = (value: string) => {\n\tif (value) return undefined\n\treturn 'Field is required'\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n\tif (value.length > maxLength) return `Max length is ${maxLength} symbols`\n\treturn undefined\n}\n\n","import React from 'react';\nimport styles from './Preloader.module.css';\nimport preloader from '../../../assets/images/loader.svg';\n\nconst Preloader = () => {\n    return (\n        <div className={styles.wrapper}>\n            <img src={preloader} className={styles.img} alt=\"loader\"/>\n        </div>\n    )\n}\n\nexport default Preloader;","import React from 'react';\nimport styles from './FormControls.module.css';\n\n\nexport const Textarea: React.FC = (props: any) => {\n    const hasError = props.meta.touched && props.meta.error\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <textarea {...props.input} className={styles.textarea}/>\n            {hasError && <span className={styles.errorMsg}>{props.meta.error}</span>}\n        </div>\n    )\n}\n\nexport const Input: React.FC = (props: any) => {\n    const hasError = props.meta.touched && props.meta.error\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <input {...props.input} className={styles.inputText}/>\n            {hasError && <span className={styles.errorMsg}>{props.meta.error}</span>}\n        </div>\n    )\n}\n\nexport const InputPsw: React.FC = (props: any) => {\n    const hasError = props.meta.touched && props.meta.error\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <input {...props.input} className={styles.inputText} type={'password'}/>\n            {hasError && <span className={styles.errorMsg}>{props.meta.error}</span>}\n        </div>\n    )\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copyright\":\"Footer_copyright__19Rzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialLink\":\"SocialLink_socialLink__3h2HL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Login_section__1CXTH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__2h-ht\",\"img\":\"Preloader_img__2_Qxq\"};","import {v1} from 'uuid'\nimport {profileAPI} from '../api/api';\nimport {PhotosType, ProfileType, ResultCodeStatus, userProfile} from '../types/types';\nimport {ThunkType} from './redux-store';\nimport {stopSubmit} from 'redux-form';\n\n\nconst initialState = {\n    posts: [\n        {id: v1(), message: 'Hi World! How are you?', likesCounter: 75},\n        {id: v1(), message: 'Today is a good day!', likesCounter: 57},\n    ],\n    profile: userProfile,\n    status: ''\n}\n\nconst profileReducer = (state = initialState, action: ProfileActionsType): InitialStateType => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {id: v1(), message: action.newPostBody, likesCounter: 0};\n            return {\n                ...state,\n                posts: [newPost, ...state.posts]\n            }\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            }\n        case SET_STATUS:\n            return {\n                ...state,\n                status: action.status\n            }\n        case SAVE_PHOTO:\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.photos}\n            }\n        default:\n            return state\n    }\n}\n\n//Action\nexport const addPostAC = (newPostBody: string) => ({type: ADD_POST, newPostBody} as const)\nexport const setUserProfileAC = (profile: ProfileType) => ({\n    type: SET_USER_PROFILE,\n    profile\n} as const)\nexport const setStatusAC = (status: string) => ({type: SET_STATUS, status} as const)\nexport const savePhotoAC = (photos: PhotosType) => ({type: SAVE_PHOTO, photos} as const)\n\n\n//Thunk\nexport const setUserProfileTC = (userId: string): ThunkType => async dispatch => {\n    const response = await profileAPI.getUser(userId)\n    dispatch(setUserProfileAC(response.data))\n}\nexport const getUserStatusTC = (userId: string): ThunkType => async dispatch => {\n    const response = await profileAPI.getStatus(userId)\n    dispatch(setStatusAC(response.data))\n}\nexport const updateStatusTC = (status: string): ThunkType => async dispatch => {\n    try {\n        const response = await profileAPI.updateStatus(status)\n        if (response.data.resultCode === ResultCodeStatus.success) {\n            dispatch(setStatusAC(status))\n        }\n    } catch (error) {\n        // code to do when an error happens\n        console.log(error)\n    }\n}\nexport const savePhotoTC = (file: File): ThunkType => async dispatch => {\n    const response = await profileAPI.savePhoto(file)\n    if (response.data.resultCode === ResultCodeStatus.success) {\n        dispatch(savePhotoAC(response.data.photos))\n    }\n}\nexport const saveProfileTC = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\n    const response = await profileAPI.saveProfile(profile)\n    const userId = getState().auth.userId\n    if (response.data.resultCode === ResultCodeStatus.success) {\n        if (userId) {\n            dispatch(setUserProfileTC(userId))\n        }\n    } else {\n        // get error message from server\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error'\n        // stop form submit if fields are wrong\n        dispatch(stopSubmit('edit-profile', {_error: message}))\n        return Promise.reject(message)\n    }\n}\n\nexport default profileReducer;\n\n\n//Types\nexport const ADD_POST = 'profile/ADD_POST'\nexport const SET_USER_PROFILE = 'profile/SET_USER_PROFILE'\nexport const SET_STATUS = 'profile/SET_STATUS'\nexport const SAVE_PHOTO = 'profile/SAVE_PHOTO'\n\ntype InitialStateType = typeof initialState;\nexport type ProfileActionsType =\n    ReturnType<typeof addPostAC> |\n    ReturnType<typeof setUserProfileAC> |\n    ReturnType<typeof setStatusAC> |\n    ReturnType<typeof savePhotoAC>\n\n\n\n\n\n"],"sourceRoot":""}